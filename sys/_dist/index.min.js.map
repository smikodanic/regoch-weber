{"version":3,"sources":["webpack://regoch-weber/./sys/lib/eventEmitter.js","webpack://regoch-weber/./sys/lib/navig.js","webpack://regoch-weber/./sys/mvc/Aux.js","webpack://regoch-weber/./sys/mvc/DataRgListeners.js","webpack://regoch-weber/./sys/mvc/DataRg.js","webpack://regoch-weber/./sys/mvc/View.js","webpack://regoch-weber/webpack/bootstrap","webpack://regoch-weber/webpack/runtime/define property getters","webpack://regoch-weber/webpack/runtime/hasOwnProperty shorthand","webpack://regoch-weber/webpack/runtime/make namespace object","webpack://regoch-weber/./sys/router/RegochRouter.js","webpack://regoch-weber/./sys/router/Router.js","webpack://regoch-weber/./sys/lib/HTTPClient.js","webpack://regoch-weber/./sys/conf/$debugOpts.js","webpack://regoch-weber/./sys/App.js","webpack://regoch-weber/./sys/mvc/Model.js","webpack://regoch-weber/./sys/mvc/Controller.js","webpack://regoch-weber/./sys/lib/Cookie.js","webpack://regoch-weber/./sys/lib/Auth.js","webpack://regoch-weber/./sys/lib/Form.js","webpack://regoch-weber/./sys/lib/Paginator.js","webpack://regoch-weber/./sys/lib/util.js","webpack://regoch-weber/./sys/index.js"],"names":[],"mappings":"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","file":"index.min.js","sourcesContent":["/**\n * The EventEmitter based on window CustomEvent. Inspired by the NodeJS event lib.\n */\nclass EventEmitter {\n\n  constructor() {\n    this.activeOns = []; // [{eventName:string, listener:Function, listenerWindow:Function}]\n  }\n\n\n  /**\n   * Create and emit the event\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {any} detail - event argument\n   * @returns {void}j\n   */\n  emit(eventName, detail = {}) {\n    const event = new CustomEvent(eventName, { detail });\n    window.dispatchEvent(event);\n  }\n\n\n  /**\n   * Listen for the event\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {Function} listener - callback function, for example msg => {...}\n   * @returns {void}\n   */\n  on(eventName, listener) {\n    const listenerWindow = event => {\n      listener.call(null, event);\n    };\n\n    this._removeOne(eventName, listener);\n    this.activeOns.push({ eventName, listener, listenerWindow });\n    window.addEventListener(eventName, listenerWindow);\n  }\n\n\n  /**\n   * Listen for the event only once\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {Function} listener - callback function\n   * @returns {void}\n   */\n  once(eventName, listener) {\n    const listenerWindow = event => {\n      listener.call(null, event);\n\n      this._removeOne(eventName, listener, listenerWindow);\n    };\n\n    window.addEventListener(eventName, listenerWindow, { once: true });\n  }\n\n\n  /**\n   * Stop listening the event for specific listener.\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @param {Function} listener - callback function, for example msg => {...}\n   * @returns {void}\n   */\n  off(eventName, listener) {\n    this._removeOne(eventName, listener);\n  }\n\n\n  /**\n   * Stop listening the event for all listeners defined with on().\n   * For example eventEmitter.on('msg', fja1) & eventEmitter.on('msg', fja2) then eventEmitter.off('msg') will remove fja1 and fja2 listeners.\n   * @param {string} eventName - event name, for example: 'pushstate'\n   * @returns {void}\n   */\n  offAll(eventName) {\n    let ind = 0;\n    for (const activeOn of this.activeOns) {\n      if (activeOn.eventName === eventName) {\n        window.removeEventListener(activeOn.eventName, activeOn.listenerWindow);\n        this.activeOns.splice(ind, 1);\n      }\n      ind++;\n    }\n  }\n\n\n  /**\n   * Get all active listeners.\n   * @returns {{eventName:string, listener:Function, listenerWindow:Function}[]}\n   */\n  getListeners() {\n    return { ...this.activeOns };\n  }\n\n\n\n\n\n  /*** PRIVATES ***/\n  /**\n   * Remove a listener from window and this.activeOns\n   */\n  _removeOne(eventName, listener) {\n    if (!listener) { throw new Error('eventEmitter._removeOne Error: listener is not defined'); }\n    let ind = 0;\n    for (const activeOn of this.activeOns) {\n      if (activeOn.eventName === eventName && activeOn.listener.toString() === listener.toString()) {\n        window.removeEventListener(activeOn.eventName, activeOn.listenerWindow);\n        this.activeOns.splice(ind, 1);\n      }\n      ind++;\n    }\n  }\n\n\n\n\n\n}\n\n\nconst eventEmitter = new EventEmitter();\n\nexport default eventEmitter;\n","import eventEmitter from './eventEmitter.js';\n\n\n/**\n * Manage the URL in browser's address bar.\n */\nclass Navig {\n\n  constructor() {\n    this.previous = { uri: '', ctrl: null };\n    this.current = { uri: '', ctrl: null };\n  }\n\n\n\n  /********** SETTERS & GETTERS ********/\n  /**\n   * Set previous uri and controller.\n   */\n  setPrevious() {\n    this.previous = { ...this.current };\n  }\n\n  /**\n   * Set current uri and controller.\n   * @param {Controller} ctrl - instance of the current controller\n   */\n  setCurrent(ctrl) {\n    const uri = this.getCurrentURI();\n    this.current = { uri, ctrl };\n  }\n\n  /**\n  * Get the current URI. The uri is path + query string, without hash, for example: /page1.html?q=12\n  * @returns {string}\n  */\n  getPrevioustURI() {\n    return this.previous.uri;\n  }\n\n  /**\n   * Get the current URI. The uri is path + query string, without hash, for example: /page1.html?q=12\n   * @returns {string}\n   */\n  getCurrentURI() {\n    return window.location.pathname + window.location.search;\n  }\n\n\n  /**\n   * Reset the previous controller properties and execute destroy()\n   * @param {object} trx - regoch router transitional variable (defined in router.js -> _exe())\n   */\n  async resetPreviousController(trx) {\n    const ctrl_prev = this.previous.ctrl;\n    if (!!ctrl_prev) {\n      await ctrl_prev.destroy(trx); // execute destroy() defined in the previous controller\n      ctrl_prev.rgKILL(); // kill the previous controller event listeners\n      ctrl_prev.emptyModel(); // empty the previous controller $model\n\n      // purge non-standard controller properties\n      const ctrlProps = Object.keys(ctrl_prev);\n      for (const ctrlProp of ctrlProps) {\n        if (\n          ctrlProp !== '$debugOpts' &&\n          ctrlProp !== '$fridge' &&\n          ctrlProp !== '$model' &&\n          ctrlProp !== '$modeler' &&\n          ctrlProp !== '$navig' &&\n          ctrlProp !== '$rg' &&\n          ctrlProp !== '$httpClient' &&\n          ctrlProp !== '$baseURIhost' &&\n          ctrlProp !== '$auth'\n        ) {\n          delete ctrl_prev[ctrlProp];\n          // console.log('purged::', ctrlProp);\n        }\n      }\n\n    }\n\n  }\n\n\n\n\n  /************ NAVIGATION ************/\n  /**\n   * Navigates to a view using an absolute URL path. The controller middlewares will be executed.\n   * https://developer.mozilla.org/en-US/docs/Web/API/History/pushState\n   * @param {string} url - absolute URL path, /customer/product/25?limit=25\n   * @param {any} state - the state data. Fetch it with event.detail\n   * @param {string} title\n   */\n  goto(url, state, title) {\n    if (!url) { throw new Error('The argument \"url\" is not defined'); }\n    if (!state) { state = {}; }\n    if (!title) { title = ''; }\n    state = { ...state, url };\n    window.history.pushState(state, title, url); // change URL in the browser address bar\n    eventEmitter.emit('pushstate', state); // pushstate event to activate controller in the router.js\n  }\n\n\n  /**\n   * Just change the browser URL and do not execute controller middlewares.\n   * @param {string} url - absolute URL path, /customer/product/25?limit=25\n   * @param {any} state - the state data. Fetch it with event.detail\n   * @param {string} title\n   */\n  goblind(url, state, title) {\n    if (!url) { throw new Error('The argument \"url\" is not defined'); }\n    if (!state) { state = {}; }\n    if (!title) { title = ''; }\n    state = { ...state, url };\n    window.history.pushState(state, title, url); // change URL in the browser address bar\n  }\n\n\n  /**\n   * Go forward like forward button is clicked.\n   */\n  forward() {\n    window.history.forward();\n  }\n\n  /**\n   * Go back like back button is clicked.\n   */\n  back() {\n    window.history.back();\n  }\n\n  /**\n   * Loads a specific page from the session history.\n   * You can use it to move forwards and backwards through the history depending on the delta value.\n   * @param {number} delta - history index number, for example: -1 is like back(), and 1 is like forward()\n   */\n  go(delta) {\n    window.history.go(delta);\n  }\n\n  /**\n   * Reloads the page like refresh button is clicked.\n   */\n  reload() {\n    window.location.reload();\n  }\n\n\n\n\n  /********** EVENT LISTENERS ************/\n  /**\n   * Listen for the 'pushstate' event.\n   * The pushstate hapen when element with data-rg-href attribute is clicked.\n   * @param {Function} listener - callback function with event parameter, for example pevent => { ... }\n   * @returns {void}\n   */\n  onPushstate(listener) {\n    eventEmitter.on('pushstate', listener);\n  }\n\n\n  /**\n   * Listen for the 'popstate' event.\n   * The popstate event is fired each time when the current history entry changes (user navigates to a new state).\n   * That happens when user clicks on browser's Back/Forward button or when history.back(), history.forward(), history.go() methods are programatically called.\n   * Also popstate event occur when the a.href link is clicked (even if it contains only hashtag, for example: <a href=\"#\">test</a>).\n   * The event.state is property of the event is equal to the history state object.\n   * @param {Function} listener - callback function with event parameter, for example pevent => { ... }\n   * @returns {void}\n   */\n  onPopstate(listener) {\n    window.addEventListener('popstate', listener);\n  }\n\n\n  /**\n   * Listen for the URL changes.\n   * The URL is contained of path and search query but without hash, for example: /page1.html?q=12.\n   * @param {Function} listener - callback function with event parameter, for example pevent => { ... }\n   * @returns {void}\n   */\n  onUrlChange(listener) {\n    this.onPushstate(listener);\n    this.onPopstate(listener);\n  }\n\n\n  /**\n   * Listen for the 'hashchange' event.\n   * This happens when window.location.hash is changed. For example /product#image --> /product#description\n   * @param {Function} listener - callback function with event parameter, for example pevent => { ... }\n   * @returns {void}\n   */\n  onHashchange(listener) {\n    window.addEventListener('hashchange', listener);\n  }\n\n\n}\n\n\nconst navig = new Navig();\n\nexport default navig;\n","/**\n * Auxilary controller methods.\n */\nclass Aux {\n\n  /***** CONTROLLER PROPERTY GETTER/SETTER *****/\n  /**\n   * Get the controller property's value. For example controller's property is this.$model.firstName in JS and in HTML data-rg-print=\"$model.firstName\"\n   * @param {string} prop - controller property name, for example: company.name, $model.car.color, $fridge.color\n   * @returns {any}\n   */\n  _getControllerValue(prop) {\n    prop = this._solveInterpolated(prop); // first solve {{...}} brackets, for example: $model.pet___{{pets.$i0._id}} -> $model.pet___12345\n    prop = this._solveMath(prop); // $model.pet___solveMath/{{ctrlProp}} + 1/ -> $model.pet___8\n\n    const propSplitted = prop.split('.'); // ['company', 'name']\n    const prop1 = propSplitted[0]; // company\n\n    let val = this[prop1]; // controller property value\n    propSplitted.forEach((prop, key) => {\n      if (key !== 0 && val != undefined) { val = val[prop]; }\n    });\n\n    return val;\n  }\n\n\n  /**\n   * Set the controller property's value.\n   * For example controller's property is this.product.name\n   * @param {string} prop - controller property name, for example: $model.product.name\n   * @param {any} val - controller property value\n   * @returns {void}\n   */\n  _setControllerValue(prop, val) {\n    const propSplitted = prop.split('.'); // ['$model', 'product', 'name']\n    let i = 1;\n    let obj = this;\n    for (const prop of propSplitted) {\n      if (i !== propSplitted.length) { // not last property\n        if (obj[prop] === undefined) { obj[prop] = {}; }\n        obj = obj[prop];\n      } else { // on last property associate the value\n        obj[prop] = val;\n      }\n      i++;\n    }\n  }\n\n\n\n  /***** MODEL PROPERTY GETTER/SETTER *****/\n  /**\n   * Get the model value\n   * @param {string} mprop - $model property path (without $model), for example 'car.year' is 'this.$model.car.year'\n   */\n  _getModelValue(mprop) {\n    const prop = '$model.' + mprop;\n    const val = this._getControllerValue(prop);\n    return val;\n  }\n\n\n  /**\n   * Set the $model property's value with <input data-rg-model=\"modelName.mprop1.mprop2\">.\n   * Up to 5 levels deep and every object level is a new Proxy object.\n   * --- This method will trigger render() because this.$model is Proxy object. ---\n   * @param {string} mprop - $model property path (without $model), for example: 'company.ceo.name' represents this.$model.company.ceo.name\n   * @param {any} val - the value of $model property i.e. mprop\n   * @returns {void}\n   */\n  _setModelValue(mprop, val) {\n    const mprops = mprop.split('.'); // ['company', 'cto',  'name']\n    const modelName = mprops.shift(); // modelName:: 'company'  AND  props:: ['cto',  'name']\n\n    if (mprops.length === 0) {\n      this.$model[modelName] = val;\n\n    } else if (mprops.length === 1) {\n      const prop1 = mprops[0];\n      const obj = this.$model[modelName] || {};\n      obj[prop1] = val;\n      this.$model[modelName] = obj;\n\n    } else if (mprops.length === 2) {\n      const prop1 = mprops[0];\n      const prop2 = mprops[1];\n      const obj = this.$model[modelName] || {};\n      obj[prop1] = obj[prop1] || {};\n      obj[prop1][prop2] = val;\n      this.$model[modelName] = obj;\n\n    } else if (mprops.length === 3) {\n      const prop1 = mprops[0];\n      const prop2 = mprops[1];\n      const prop3 = mprops[2];\n      const obj = this.$model[modelName] || {};\n      obj[prop1] = obj[prop1] || {};\n      obj[prop1][prop2] = obj[prop1][prop2] || {};\n      obj[prop1][prop2][prop3] = val;\n      this.$model[modelName] = obj;\n\n    } else if (mprops.length === 4) {\n      const prop1 = mprops[0];\n      const prop2 = mprops[1];\n      const prop3 = mprops[2];\n      const prop4 = mprops[3];\n      const obj = this.$model[modelName] || {};\n      obj[prop1] = obj[prop1] || {};\n      obj[prop1][prop2] = obj[prop1][prop2] || {};\n      obj[prop1][prop2][prop3] = obj[prop1][prop2][prop3] || {};\n      obj[prop1][prop2][prop3][prop4] = val;\n      this.$model[modelName] = obj;\n\n    } else if (mprops.length === 5) {\n      const prop1 = mprops[0];\n      const prop2 = mprops[1];\n      const prop3 = mprops[2];\n      const prop4 = mprops[3];\n      const prop5 = mprops[4];\n      const obj = this.$model[modelName] || {};\n      obj[prop1] = obj[prop1] || {};\n      obj[prop1][prop2] = obj[prop1][prop2] || {};\n      obj[prop1][prop2][prop3] = obj[prop1][prop2][prop3] || {};\n      obj[prop1][prop2][prop3][prop4] = obj[prop1][prop2][prop3][prop4] || {};\n      obj[prop1][prop2][prop3][prop4][prop5] = val;\n      this.$model[modelName] = obj;\n    }\n\n  }\n\n\n\n  /***** SOLVERS *****/\n  /**\n   * Replace iteration variable $i with the number. Use only inside data-rg-for and data-rg-repeat.\n   * @param {number} i - number to replace $i with\n   * @param {string} txt - text which needs to be replaced, usually it contains HTML tags\n   * @param {string} $iExtension - extension of the variable name. For example if $iExtension is 21 then the $i21 will be replaced.\n   * @returns {string}\n   */\n  _solve_$i(i, txt, $iExtension) {\n    let reg;\n    if (!$iExtension || $iExtension === '0') { reg = new RegExp('\\\\$i0|\\\\$i', 'g'); } // $i can be used instead of $i0\n    else { reg = new RegExp(`\\\\$i${$iExtension}`, 'g'); }\n    txt = txt.replace(reg, i);\n    return txt;\n  }\n\n\n  /**\n   * Find {{ctrlProp}} occurrences in the txt and replace it with the controller property value.\n   * @param {string} txt - text which needs to be replaced\n   */\n  _solveInterpolated(txt) {\n    const openingChar = '{{';\n    const closingChar = '}}';\n\n    const reg = new RegExp(`${openingChar}\\\\s*${this.$rg.varnameChars}\\\\s*${closingChar}`, 'g');\n    const interpolations = txt.match(reg) || []; // [\"age\", \"user.name\"]\n\n    for (const interpolation of interpolations) {\n      const prop = interpolation.replace(openingChar, '').replace(closingChar, '').trim();\n\n      let val = this._getControllerValue(prop);\n      if (val === undefined) {\n        this._debug('warnings', `_solveInterpolatedWarn:: Controller property ${prop} is undefined.`, 'Maroon', 'LightYellow');\n        val = '';\n      }\n      txt = txt.replace(interpolation, val);\n\n      // nested interpolation, for example: data-rg-echo=\"{{docs.$i.{{fields.$i}}}}\"\n      if (reg.test(txt)) {\n        txt = this._solveInterpolated(txt);\n      }\n    }\n\n    return txt;\n  }\n\n\n  /**\n   * Replace solveMath/expression/ in the txt (HTML code) with the evaluated value.\n   * @param {string} txt  - text which needs to be replaced, usually it contains HTML tags\n   */\n  _solveMath(txt) {\n    const reg = /solveMath\\/[\\d\\+\\-\\*\\/\\%\\(\\)\\s]+\\//g;\n    const evs = txt.match(reg); // ['solveMath/0 + 1/', 'solveMath/5 / 2/']\n    if (!evs) { return txt; }\n\n    for (const ev of evs) {\n      const reg2 = /solveMath\\/([\\d\\+\\-\\*\\/\\%\\(\\)\\s]+)\\//;\n      const expression = ev.match(reg2)[1];\n      const result = eval(expression);\n      txt = txt.replace(reg2, result);\n    }\n\n    return txt;\n  }\n\n\n  /***** COMPARISONS *****/\n  /**\n   * Caclulate comparison with operators ! = < > && ||: data-rg-if=\"5 === 3\", data-rg-if=\"this.age > this.myAge\", data-rg-if=\"$model.age <= $model.myAge\"\n   * @param {any} attrVal - data-rg-if attribute value, for example: 5===3,\n   * @returns {boolean}\n   */\n  _calcComparison_A(attrVal) {\n    const reg = new RegExp(`\\\\$model\\\\.${this.$rg.varnameChars}|this\\\\.${this.$rg.varnameChars}`, 'g');\n    const props = attrVal.match(reg) || []; // controller properties: ['this.age', '$model.age']\n\n    let expression = attrVal;\n    for (const prop of props) {\n      const prop2 = prop.trim().replace(/^this\\./, '');\n      let val = this._getControllerValue(prop2);\n      if (typeof val === 'string') { val = `'${val}'`; }\n      // console.log(prop, val);\n      expression = expression.replace(prop, val);\n    }\n\n    let tf = false;\n    try {\n      tf = eval(expression);\n    } catch (err) {\n      console.error(`Bad expression \"${attrVal}\" --> ${expression}`);\n    }\n\n    // console.log(expression, '--', tf);\n    return tf;\n  }\n\n  /**\n   * Get true/false directly from the controller/model value: data-rg-if=\"is_active\", data-rg-if=\"$model.is_active\"\n   * Caclulate comparison with $ operators, simillar to mongoDB: data-rg-if=\"this.age $eq(18)\", data-rg-if=\"age $eq(18)\", data-rg-if=\"age $eq(this.myAge)\", data-rg-if=\"age $eq($model.myAge)\"\n   * @param {any} attrVal - data-rg-if attribute value, for example: is_active, age $gt(this.ctrlProp), age $eq($model.myAge)\n   * @returns {boolean}\n   */\n  _calcComparison_B(attrVal) {\n    const propCompSplitted = attrVal.split(/\\s+\\$/); // ['age', 'eq($model.myAge)'] or ['this.age', 'eq($model.myAge)']\n\n    const prop = propCompSplitted[0].trim().replace(/^this\\./, ''); // age\n    const val = this._getControllerValue(prop); // 33\n\n    const funcDef = propCompSplitted[1] ? '$' + propCompSplitted[1].trim() : undefined; // $eq($model.myAge)\n    const { funcName, funcArgs } = this._funcParse(funcDef); // funcName: $eq , funcArgs: [22]\n    const arg = !!funcArgs && !!funcArgs.length ? funcArgs[0] : undefined; // 22\n\n    let tf = !!val;\n    if (funcName === '$not') { tf = !val; }\n    else if (funcName === '$eq') { tf = val === arg; }\n    else if (funcName === '$ne') { tf = val !== arg; }\n    else if (funcName === '$gt') { tf = typeof val === 'number' ? val > arg : false; }\n    else if (funcName === '$gte') { tf = typeof val === 'number' ? val >= arg : false; }\n    else if (funcName === '$lt') { tf = typeof val === 'number' ? val < arg : false; }\n    else if (funcName === '$lte') { tf = typeof val === 'number' ? val <= arg : false; }\n    else if (funcName === '$in' && !!arg) { tf = arg.indexOf(val) !== -1; } // arg must be array\n    else if (funcName === '$nin' && !!arg) { tf = arg.indexOf(val) === -1; } // arg must be array\n    else if (funcName === '$reg' && !!arg) { tf = val !== undefined ? arg.test(val) : false; } // arg must be RegExp, val must contain regexp to be true\n    else if (funcName === '$nreg' && !!arg) { tf = val !== undefined ? !arg.test(val) : false; } // arg must be RegExp, val shouldn't contain regexp to be true\n\n    // console.log(`funcName:: ${funcName} -- val::${typeof val} ${val} vs. arg::${typeof arg} ${arg} => tf::${tf} --`);\n    return tf;\n  }\n\n\n\n  /***** FUNCTIONS *****/\n  /**\n   * Execute the assignment. For example: $model.age = 3 in data-rg-click=\"$model.age = 3\" will set model this.$model.age=3\n   * Examples: $model.age=3 , $model.name = 'Marko', $model.name=\"Marko\" , $model.age=$element.value , $model.age=this.ctrlProp , $model.age=$model.mdlProp\n   * @param {string} assignment - JS assignment, for example: age = 3 i.e. prop=val\n  * @param {HTMLElement} elem - element where is the data-rg-... attribute\n   * @param {Event} event - the DOM Event object\n   * @return {void}\n   */\n  _assignmentExe(assignment, element, event) {\n    try {\n      const splitted = assignment.split('='); // prop=val\n      const prop = splitted[0].trim();\n      let val = splitted[1].trim().replace(/\\'|\\\"|\\`/g, '');\n\n      // solve val if it's $element.value or ctrlProp (controller property)\n      const reg = new RegExp(this.$rg.varnameChars, '');\n      if (/^\\$element/.test(val)) { const element_prop = val.split('.')[1] || 'value'; val = element[element_prop]; } // data-rg-click=\"$model.x = $element.value\"\n      else if (/^\\$event/.test(val)) { const event_prop = val.split('.')[1] || 'type'; val = event[event_prop]; }  // data-rg-click=\"$model.x = $event.type\" (rarely used)\n      else if (/^\\$model/.test(val)) { val = val.replace('$model.', ''); val = this._getModelValue(val); }  // data-rg-click=\"$model.x = $model.y\"\n      else if (/^this\\./.test(val)) { val = val.replace('this.', ''); val = this._getControllerValue(val); } // data-rg-click=\"$model.x = this.ctrlProp\"\n      else { val = val; } // data-rg-click=\"$model.x = 888\"\n      this._setControllerValue(prop, val);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  /**\n   * Parse function definition and return function name and arguments.\n   * For example: products.list(25, 'str', $event, $element) -> {funcName: 'products.list', funcArgs: [55, elem]}\n   * @param {string} funcDef - function definition in the data-rg- attribute\n   * @param {HTMLElement} elem - data-rg- HTML element on which is the event applied\n   * @param {Event} event - event (click, keyup, ...) applied on the data-rg- element (used only in the DataRgListeners)\n   * @returns {{funcName:string, funcArgs:any[], funcArgsStr:string}\n   */\n  _funcParse(funcDef, elem, event) {\n    if (!funcDef) { return {}; }\n\n    const matched = funcDef.match(/^(.+)\\((.*)\\)$/);\n    if (!matched) { console.error(`_funcParseErr: Function \"${funcDef}\" has bad definition.`); return {}; }\n    const funcName = matched[1] || ''; // function name: products.list\n\n    const funcArgsStr = !!matched[2] ? matched[2].trim() : ''; // function arguments: 25, 'str', $event, $element, this.products\n    const funcArgs = !funcArgsStr ? [] : funcArgsStr\n      .split(',')\n      .map(arg => {\n        arg = arg.trim();\n        if (arg === '$element') { arg = elem; }\n        else if (arg === '$value') { arg = this._getElementValue(elem, true); }\n        else if (arg === '$event') { arg = event; }\n        else if (/\"|'/.test(arg)) { arg = arg.replace(/\\'/g, ''); } // string\n        else if (/^-?\\d+\\.?\\d*$/.test(arg) && !/\\'/.test(arg)) { arg = +arg; } // number\n        else if ((arg === 'true' || arg === 'false')) { arg = JSON.parse(arg); } // boolean\n        else if (/^\\/.+\\/i?g?$/.test(arg)) { // if regular expression, for example in replace(/Some/i, 'some')\n          const mat = arg.match(/^\\/(.+)\\/(i?g?)$/);\n          arg = new RegExp(mat[1], mat[2]);\n        }\n        else if (/^this\\./.test(arg)) { // if contain this. i.e. controller property\n          const prop = arg.replace(/^this\\./, ''); // remove this.\n          const val = this._getControllerValue(prop);\n          arg = val;\n        }\n        else if (/^\\$model\\./.test(arg)) { // if contain this. i.e. controller property\n          const mprop = arg.replace(/^\\$model\\./, ''); // remove this.\n          const val = this._getModelValue(mprop);\n          arg = val;\n        }\n        return arg;\n      });\n\n    return { funcName, funcArgs, funcArgsStr };\n  }\n\n\n  /**\n   * Execute the function. It can be the controller method or the function defined in the controller proerty.\n   * @param {string} funcName - function name, for example: runKEYUP or products.list\n   * @param {any[]} funcArgs - function argumants\n   * @return {void}\n   */\n  async _funcExe(funcName, funcArgs) {\n    try {\n      if (/\\./.test(funcName)) {\n        // execute the function in the controller property, for example: this.print.inConsole = () => {...}\n        const propSplitted = funcName.split('.'); // ['print', 'inConsole']\n        let func = this;\n        for (const prop of propSplitted) { func = func[prop]; }\n        await func(...funcArgs);\n      } else {\n        // execute the controller method\n        if (!this[funcName]) { throw new Error(`Method \"${funcName}\" is not defined in the \"${this.constructor.name}\" controller.`); }\n        await this[funcName](...funcArgs);\n      }\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n\n  /**\n   * Execute multiple functions, for example: data-rg-click=\"f1(); f2(a, b);\";\n   * @param {string} funcDefs - definition of the functions: func1();func2(a, b);\n   * @param {HTMLElement} elem - element where is the data-rg-... attribute\n   * @param {Event} event - the DOM Event object\n   */\n  async _funcsExe(funcDefs, elem, event) {\n    const statement_reg = /\\w\\s*\\=\\s*[a-zA-z0-9\\'\\\"\\$]+/; // regexp for statement, for example age = 3\n    if (statement_reg.test(funcDefs)) {\n      const assignment = funcDefs;\n      this._assignmentExe(assignment, elem, event);\n      return;\n    }\n\n    const funcDefs_arr = funcDefs.split(';').filter(funcDef => !!funcDef).map(funcDef => funcDef.trim());\n    for (const funcDef of funcDefs_arr) {\n      const { funcName, funcArgs } = this._funcParse(funcDef, elem, event);\n      await this._funcExe(funcName, funcArgs);\n    }\n  }\n\n\n\n  /***** DOM ELEMENTS *****/\n  /**\n   * Clone the original element and place new element in the element sibling position.\n   * The original element gets data-rg-xyz-id , unique ID to distinguish the element from other data-rg-xyz elements on the page.\n   * The cloned element gets data-rg-xyz-gen and data-rg-xyz-id attributes.\n   * @param {Element} elem - original element\n   * @param {string} attrName - attribute name: data-rg-for, data-rg-repeat, data-rg-print\n   * @param {string} attrVal - attribute value: 'continent @@ append'\n   * @returns\n   */\n  _genElem_create(elem, attrName, attrVal) {\n    // hide the original data-rg-xyz (reference) element\n    elem.style.display = 'none';\n\n    let uid = this._uid();\n\n    const dataRgId = elem.getAttribute(`${attrName}-id`);\n    if (!dataRgId) {\n      elem.setAttribute(`${attrName}-id`, uid); // add data-rg-xyz-id , unique ID (because the page can have multiple elements with [data-rg-xyz-gen=\"${attrVal}\"] and we need to distinguish them)\n    } else {\n      uid = dataRgId; // if the uid is already assigned\n    }\n\n\n    // clone the data-rg-xyz element\n    const newElem = elem.cloneNode(true);\n    newElem.removeAttribute(attrName);\n    newElem.setAttribute(`${attrName}-gen`, attrVal);\n    newElem.setAttribute(`${attrName}-id`, uid);\n    newElem.style.display = '';\n\n    // place newElem as sibling of the elem\n    elem.parentNode.insertBefore(newElem, elem.nextSibling);\n\n    return newElem;\n  }\n\n\n  /**\n   * Remove element with the specific data-rg-xyz-gen and data-rg-xyz-id attributes.\n   * @param {Element} elem - original element\n   * @param {string} attrName - attribute name: data-rg-for, data-rg-repeat, data-rg-print\n   * @param {string} attrVal - attribute value: 'continent @@ append'\n   * @returns\n   */\n  _genElem_remove(elem, attrName, attrVal) {\n    const uid = elem.getAttribute(`${attrName}-id`);\n    const genAttr_sel = `[${attrName}-gen=\"${attrVal}\"][${attrName}-id=\"${uid}\"]`;\n    const genElems = document.querySelectorAll(genAttr_sel);\n    for (const genElem of genElems) { genElem.remove(); }\n  }\n\n\n  /**\n   * Set the HTML form element value. Make correction according to the element & value type.\n   * @param {HTMLElement} elem - HTML form element\n   * @param {any} val - value to populate HTML form element (if val is undefined then it's empty string)\n   */\n  _setElementValue(elem, val = '') {\n    if (typeof val === 'object') {\n      if (elem.type === 'textarea') { val = JSON.stringify(val, null, 2); }\n      else { val = JSON.stringify(val); }\n    }\n    elem.value = val;\n    elem.setAttribute('value', val);\n  }\n\n\n  /**\n   * Get the HTML form element value. Make correction according to the element type & value type.\n   * Element types: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\n   * @param {HTMLElement} elem - HTML form element\n   * @param {boolean} convertType - default true\n   * @returns {any} val - single value or array for checkbox and select-multiple\n   */\n  _getElementValue(elem, convertType = true) {\n    // pickup all elements with same name=\"something\", for example checkboxes\n    let val;\n\n    if (elem.type === 'checkbox') {\n      const elems = document.querySelectorAll(`[name=\"${elem.name}\"]`);\n      const valArr = [];\n      let i = 1;\n      for (const elem of elems) {\n        let v = elem.value;\n        if (convertType) { v = this._typeConvertor(elem.value); }\n        if (elem.checked) { valArr.push(v); val = valArr; }\n        if (i === elems.length && !val) { val = []; }\n        i++;\n      }\n\n    } else if (elem.type === 'select-multiple') {\n      const opts = elem.selectedOptions; // selected options\n      const valArr = [];\n      let i = 1;\n      for (const opt of opts) {\n        let v = opt.value;\n        if (convertType) { v = this._typeConvertor(opt.value); }\n        valArr.push(v);\n        val = valArr;\n        if (i === opts.length && !val) { val = []; }\n        i++;\n      }\n\n    } else if (elem.type === 'radio') {\n      let v = elem.value;\n      if (convertType) { v = this._typeConvertor(elem.value); }\n      if (elem.checked) { val = v; }\n\n    } else if (elem.type === 'number') {\n      const v = elem.valueAsNumber;\n      val = v;\n\n    } else if (elem.type === 'password') {\n      val = elem.value;\n\n    } else if (elem.type === 'file' && elem.multiple) {\n      val = elem.files;\n\n    } else if (elem.type === 'file') {\n      val = elem.files[0];\n\n    } else {\n      let v = elem.value;\n      if (convertType) { v = this._typeConvertor(elem.value); }\n      val = v;\n    }\n\n    return val;\n  }\n\n\n  /**\n  * Remove elements which has generated element as parent i.e. if the parent has data-rg-xyz-gen attribute then delete that parent.\n  * @param {string} attrName - attribute name - 'data-rg-for'\n  * @param {string|RegExp} attrValQuery - query the attribute value, for example: 'companies' , or /companies\\.\\$/i\n  * @returns {void}\n  */\n  _removeParentElements(attrName, attrValQuery) {\n    let elems = document.querySelectorAll(`[${attrName}]`);\n\n    if (!!attrValQuery && typeof attrValQuery === 'string') {\n      elems = document.querySelectorAll(`[${attrName}^=\"${attrValQuery}\"]`);\n\n    } else if (!!attrValQuery && attrValQuery instanceof RegExp) {\n      const elems2 = [];\n      for (const elem of elems) {\n        const attrVal = elem.getAttribute(attrName);\n        const tf = attrValQuery.test(attrVal);\n        if (tf) { elems2.push(elem); }\n      }\n      elems = elems2;\n    }\n\n    // removals\n    for (const elem of elems) {\n      const parentElem = elem.parentNode;\n      if (parentElem.hasAttribute(`${attrName}-gen`)) { parentElem.remove(); }\n    }\n  }\n\n\n  /**\n   * Get the DOM elements by the query.\n   * For example in data-rg-for=\"companies.$i{fields.$i}\" --> attrName will be 'data-rg-for' and attrQuery will be /^companies\\.\\$\\{fields/\n   * @param {string} attrName - attribute name - 'data-rg-for'\n   * @param {string|RegExp} attrValQuery - query the attribute value, for example: 'companies' , or /companies\\.\\$/i\n   * @returns {HTMLElement[]}\n   */\n  _listElements(attrName, attrValQuery) {\n    let elems = document.querySelectorAll(`[${attrName}]`);\n\n    if (!!attrValQuery && typeof attrValQuery === 'string') {\n      elems = document.querySelectorAll(`[${attrName}^=\"${attrValQuery}\"]`);\n\n    } else if (!!attrValQuery && attrValQuery instanceof RegExp) {\n      const elems2 = [];\n      for (const elem of elems) {\n        const attrVal = elem.getAttribute(attrName);\n        const tf = attrValQuery.test(attrVal);\n        if (tf) { elems2.push(elem); }\n      }\n      elems = elems2;\n    }\n\n    return elems;\n  }\n\n\n  /**\n   * Sort elements from higher to lower priority -> 3,2,1,0 . Priority is defined in the attribute value, data-rg-for=\"companies @@ <priority>\"\n   * @param {HTMLElement[]} elems - array of the elements with specific attribute name\n   * @param {string} attrName - attribute name, for example data-rg-for\n   */\n  _sortElementsByPriority(elems, attrName) {\n    // get priority number from data-rg-for=\"companies @@ 2\"\n    const getPriority = elem => {\n      const attrVal = elem.getAttribute(attrName);\n      const attrValSplited = attrVal.split(this.$rg.separator);\n      const priority = !!attrValSplited[1] ? attrValSplited[1].trim() : 0;\n      return +priority;\n    };\n\n    // convert elems to JS Array --> [{elem, priority}]  because elems doesn't have sort()\n    let elems_arr = [];\n    for (const elem of elems) {\n      const priority = getPriority(elem);\n      elems_arr.push({ elem, priority });\n    }\n\n    // sort elements descending\n    elems_arr = elems_arr.sort((elem1, elem2) => {\n      const prior1 = elem1.priority;\n      const prior2 = elem2.priority;\n      return prior2 - prior1;\n    });\n    // console.log('elems_arr::', elems_arr);\n\n    // convert JS Array to HTML Elements array\n    elems = elems_arr.map(elem_arr => elem_arr.elem);\n\n    return elems;\n  }\n\n\n\n  /***** MISC *****/\n  /**\n   * Convert string into integer, float or boolean.\n   * @param {string} value\n   * @returns {string | number | boolean | object}\n   */\n  _typeConvertor(value) {\n    function isJSON(value) {\n      try { JSON.parse(value); }\n      catch (err) { return false; }\n      return true;\n    }\n\n    if (!!value && !isNaN(value) && !/\\./.test(value)) { // convert string into integer (12)\n      value = parseInt(value, 10);\n    } else if (!!value && !isNaN(value) && /\\./.test(value)) { // convert string into float (12.35)\n      value = parseFloat(value);\n    } else if (value === 'true' || value === 'false') { // convert string into boolean (true)\n      value = JSON.parse(value);\n    } else if (isJSON(value)) {\n      value = JSON.parse(value);\n    }\n\n    return value;\n  }\n\n\n  /**\n   * Create unique id.\n   */\n  _uid() {\n    const date = Date.now() / 1000;\n    const ms = (date + '').split('.')[1];\n    const rnd = Math.round(Math.random() * 1000);\n    const uid = ms + '-' + rnd;\n    return uid;\n  }\n\n\n  /**\n   * Debug the controller methods.\n   * @param {string} tip - debug type: rgprint, render, ...\n   * @param {string} text - the printed text\n   * @param {string} color - text color\n   * @param {string} background - background color\n   * @returns {object}\n   */\n  _debug(tip, text, color, background) {\n    if (this.$debugOpts[tip]) { console.log(`%c ${text}`, `color: ${color}; background: ${background}`); }\n    return this.$debugOpts;\n  }\n\n\n  _printError(err) {\n    const errMsg = err.message;\n    const errStack = err.stack.replace(/\\n/g, '<br>');\n    document.body.innerHTML = `\n      <div style=\"margin:0px 13px;\">\n        <h5 style=\"color:Gray\">Page Error</h5>\n        <b style=\"color:Red;font:14px Verdana;\">${errMsg}</b>\n        <br><span style=\"color:Gray;font:12px Verdana;\">${errStack}</span>\n      </div>\n    `;\n    console.error(err);\n  }\n\n\n\n}\n\n\nexport default Aux;\n","import Aux from './Aux.js';\nimport navig from '../lib/navig.js';\n\n\n/**\n * Parse HTML elements with the \"data-rg-\" attribute (event listeners)\n */\nclass DataRgListeners extends Aux {\n\n  constructor() {\n    super();\n  }\n\n\n  /**\n   * Remove all listeners (click, input, keyup, ...) from the elements with the \"data-rg-...\" attribute\n   * when controller is destroyed i.e. when URL is changed. See /sys/router.js\n   * @returns {void}\n   */\n  async rgKILL() {\n    // this._debug().rgKILL = true;\n    this._debug('rgKILL', `------- rgKILL (start) ctrl: ${this.constructor.name} -------`, 'orange', '#FFD8B6');\n\n    const promises = [];\n    let i = 1;\n    for (const rgListener of this.$rg.listeners) {\n      rgListener.elem.removeEventListener(rgListener.eventName, rgListener.handler);\n      this._debug('rgKILL', `${i}. killed:: ${rgListener.attrName} --- ${rgListener.eventName} --- ${rgListener.elem.localName} -- ${rgListener.elem.innerHTML} -- ctrl:: ${this.constructor.name}`, 'orange');\n      promises.push(Promise.resolve(true));\n      i++;\n    }\n\n    await Promise.all(promises);\n    this.$rg.listeners = [];\n    this._debug('rgKILL', '------- rgKILL (end) -------', 'orange', '#FFD8B6');\n  }\n\n\n\n  /**\n   * data-rg-href\n   * <a href=\"/product/12\" data-rg-href>Product 12</a>\n   * <a href=\"\" data-rg-href=\"/product/12\">Product 12</a>\n   * Href listeners and changing URLs (browser history states).\n   * NOTICE: Click on data-rg-href element will destroy the controller i.e. rgKILL() will be invoked.\n   * @returns {void}\n   */\n  rgHref() {\n    this._debug('rgHref', '--------- rgHref ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-href';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgHref', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n\n      const handler = async event => {\n        event.preventDefault();\n\n        // change browser's address bar (emit 'pushstate' event)\n        const href = elem.getAttribute('data-rg-href') || elem.getAttribute('href') || '';\n        const url = href.trim();\n        const state = { href };\n        const title = !!elem.innerText ? elem.innerText.trim() : '';\n        if (!!url) { navig.goto(url, state, title); }\n\n        this._debug('rgHref', `Executed rgHref listener -->  href: ${href}, ctrl:: ${this.constructor.name}`, 'orangered');\n      };\n\n      const eventName = 'click';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgHref', `pushed::  tag: ${elem.localName} | href=\"${elem.pathname}\" | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n  }\n\n\n\n  /**\n   * data-rg-click=\"<controllerMethod> [@@ preventDefault]\"\n   * <button data-rg-click=\"myFunc()\">CLICK ME</button>\n   * Listen for click and execute the function i.e. controller method.\n   * @returns {void}\n   */\n  rgClick() {\n    this._debug('rgClick', '--------- rgClick ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-click';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgClick', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // string 'myFunc(x, y, ...restArgs) @@ preventDefault'\n      if (!attrVal) { console.error(`Attribute \"data-rg-click\" has bad definition (data-rg-click=\"${attrVal}\").`); continue; }\n\n      const attrValSplited = attrVal.split(this.$rg.separator);\n      const funcDefs = attrValSplited[0]; // func1();func2(a, b);\n      const tf = !!attrValSplited[1] && attrValSplited[1].trim() === 'preventDefault';\n\n      const handler = async event => {\n        if (tf) { event.preventDefault(); }\n        await this._funcsExe(funcDefs, elem, event);\n        this._debug('rgClick', `Executed rgClick listener --> ${funcDefs} | preventDefault: ${tf}`, 'orangered');\n      };\n\n      const eventName = 'click';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgClick', `pushed::  tag: ${elem.localName} | data-rg-click=\"${attrVal}\" | preventDefault: ${tf} | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n  }\n\n\n  /**\n   * data-rg-keyup=\"<controllerMethod> [@@ keyCode]\"\n   * <input type=\"text\" data-rg-keyup=\"myFunc()\"> - it will execute myFunc on every key\n   * <input type=\"text\" data-rg-keyup=\"myFunc() @@ enter\"> - it will execute myFunc on Enter\n   * Parse the \"data-rg-keyup\" attribute. Listen for the keyup event on certain element and execute the controller method.\n   * @returns {void}\n   */\n  rgKeyup() {\n    this._debug('rgKeyup', '--------- rgKeyup ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-keyup';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgKeyup', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      if (!attrValSplited[0]) { console.error(`Attribute \"data-rg-keyup\" has bad definition (data-rg-keyup=\"${attrVal}\").`); continue; }\n      const funcDefs = attrValSplited[0]; // func1();func2();\n\n      let keyCode = attrValSplited[1] || '';\n      keyCode = keyCode.trim().toLowerCase();\n\n      const handler = async event => {\n        let eventCode;\n        if (event.code) { eventCode = event.code.toLowerCase(); }\n        if (!!keyCode && keyCode !== eventCode) { return; }\n        await this._funcsExe(funcDefs, elem, event);\n        this._debug('rgKeyup', `Executed rgKeyup listener --> ${funcDefs} | eventCode: ${eventCode}`, 'orangered');\n      };\n\n      const eventName = 'keyup';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgKeyup', `pushed::  tag: ${elem.localName} | data-rg-keyup=\"${attrVal}\" | ctrl=\"${this.constructor.name}\" | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n  }\n\n\n\n  /**\n   * data-rg-change=\"<controllerMethod>\"\n   * <select data-rg-change=\"myFunc()\">\n   * Listen for change and execute the function i.e. controller method.\n   * @returns {void}\n   */\n  rgChange() {\n    this._debug('rgChange', '--------- rgChange ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-change';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgChange', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // string 'myFunc(x, y, ...restArgs)'\n      if (!attrVal) { console.error(`Attribute \"data-rg-change\" has bad definition (data-rg-change=\"${attrVal}\").`); continue; }\n      const funcDefs = attrVal; // func1();func2();\n\n      const handler = async event => {\n        await this._funcsExe(funcDefs, elem, event);\n        this._debug('rgChange', `Executed rgChange listener --> ${funcDefs}`, 'orangered');\n      };\n\n      const eventName = 'change';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgChange', `pushed::  tag: ${elem.localName} | data-rg-change=\"${attrVal}\" | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n  }\n\n\n\n  /**\n   * data-rg-evt=\"eventName1 @@ <controllerMethod1> [&& eventName2 @@ <controllerMethod2>]\"\n   * Listen for event and execute the function i.e. controller method.\n   * Example:\n   * data-rg-evt=\"mouseenter @@ myFunc($element, $event, 25, 'some text')\"  - $element and $event are the DOM objects of the data-rg-evt element\n   * @returns {void}\n   */\n  rgEvt() {\n    this._debug('rgEvt', '--------- rgEvt ------', 'orange', '#F4EA9E');\n    const attrName = 'data-rg-evt';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgEvt', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName).trim(); // mouseenter @@ runEVT($element, $event, 'red') && mouseleave @@ runEVT($element, $event, 'green')\n      const directives = attrVal.split('&&');\n\n      for (const directive of directives) {\n        const attrValSplited = directive.split(this.$rg.separator);\n        if (!attrValSplited[0] || !attrValSplited[1]) { console.error(`Attribute \"data-rg-evt\" has bad definition (data-rg-evt=\"${attrVal}\").`); continue; }\n\n        const eventName = attrValSplited[0].trim();\n        const funcDefs = attrValSplited[1]; // func1();func2();\n\n        const handler = async event => {\n          await this._funcsExe(funcDefs, elem, event);\n          this._debug('rgEvt', `Executed rgEvt listener --> ${funcDefs}`, 'orangered');\n        };\n\n        elem.addEventListener(eventName, handler);\n        this.$rg.listeners.push({ eventName, attrName, elem, handler, eventName });\n        this._debug('rgEvt', `pushed::  tag: ${elem.localName} | data-rg-evt | event: ${eventName} | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n      }\n    }\n  }\n\n\n\n  /**\n   * data-rg-set=\"<controllerProperty> [@@convertType|convertTypeDont]\"\n   * Parse the \"data-rg-set\" attribute. Get the value from elements like INPUT, SELECT, TEXTAREA, .... and set the controller property i.e. $model.\n   * Examples:\n   * data-rg-set=\"product\" - product is the controller property\n   * data-rg-set=\"product.name\"\n   * data-rg-set=\"product.price @@ convertType\" -> will convert price to number\n   * data-rg-set=\"product.price @@ convertTypeDont\" -> will not convert price to number, it will stay string\n   * @returns {void}\n   */\n  rgSet() {\n    this._debug('rgSet', '--------- rgSet ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-set';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgSet', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      if (!attrVal) { console.error(`Attribute \"data-rg-set\" has bad definition (data-rg-set=\"${attrVal}\").`); continue; }\n\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim();\n\n      const convertType_param = !!attrValSplited[1] ? attrValSplited[1].trim() : ''; // 'convertType' | 'convertTypeDont'\n      const convertType = convertType_param === 'convertTypeDont' ? false : true;\n\n      const handler = event => {\n        const val = this._getElementValue(elem, convertType);\n        this._setControllerValue(prop, val);\n        this._debug('rgSet', `Executed rgSet listener --> controller property:: ${prop} = ${val}`, 'orangered');\n      };\n\n      const eventName = 'input';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgSet', `pushed::  <${elem.localName} ${attrName}=\"${attrVal}\"> | rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n  }\n\n\n\n  /**\n   * data-rg-model=\"<controllerProp> [@@convertType|convertTypeDont]\"\n   * Bind controller property and view INPUT, SELECT, TEXTAREA, ...etc in both directions.\n   * When the view is updated the controller property will be updated and when controller property is updated the view will be updated.\n   * This is a shortcut of rgSet and rgValue, for example <input type=\"text\" data-rg-input=\"product\" data-rg-set=\"product\"> is <input type=\"text\" data-rg-model=\"product\">\n   * Example:\n   * data-rg-model=\"product.name\"\n   * data-rg-model=\"product.price @@ convertType\" -> will convert price to number\n   * data-rg-model=\"product.price @@ convertTypeDont\" -> will not convert price to number, it will stay string\n   * @returns {void}\n   */\n  rgModel() {\n    this._debug('rgModel', '--------- rgModel ------', 'orange', '#F4EA9E');\n\n    const attrName = 'data-rg-model';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgModel', `found elements:: ${elems.length}`, 'orange');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      if (!attrVal) { console.error(`Attribute \"data-rg-model\" has bad definition (data-rg-model=\"${attrVal}\").`); continue; }\n\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const mprop = attrValSplited[0].replace('$model.', '').trim(); // $model property name (without $model.)\n\n      const convertType_param = !!attrValSplited[1] ? attrValSplited[1].trim() : ''; // 'convertType' | 'convertTypeDont'\n      const convertType = convertType_param === 'convertTypeDont' ? false : true;\n\n      /** SETTER **/\n      const val1 = this._getModelValue(mprop);\n      this._setElementValue(elem, val1);\n      this._debug('rgModel', `rgModel set element value  --> controller property:: ${mprop} = ${val1} | elem.type:: ${elem.type}`, 'orangered');\n\n      /** LISTENER **/\n      const handler = event => {\n        const val2 = this._getElementValue(elem, convertType);\n        this._setModelValue(mprop, val2); // this will trigger render()\n        this._debug('rgModel', `Executed rgModel listener --> controller property:: ${mprop} = ${val2}`, 'orangered');\n      };\n\n      const eventName = 'input';\n      elem.addEventListener(eventName, handler);\n      this.$rg.listeners.push({ attrName, elem, handler, eventName });\n      this._debug('rgModel', `rgModel listener -- pushed::  <${elem.localName} ${attrName}=\"${attrVal}\"> -- rgListeners: ${this.$rg.listeners.length}`, 'orange');\n    }\n\n  }\n\n\n\n}\n\n\nexport default DataRgListeners;\n\n","import DataRgListeners from './DataRgListeners.js';\n\n\n/**\n * Parse HTML elements with the \"data-rg-\" attribute (non-listeners)\n */\nclass DataRg extends DataRgListeners {\n\n  constructor() {\n    super();\n\n    this.$rg = {\n      separator: '@@', // separator in the data-rg- attribute\n      elems: {},  // set by rgElem()\n      listeners: [], // collector of the data-rg- listeners  [{attrName, elem, handler, eventName}]\n      varnameChars: '[a-zA-Z\\\\d\\\\$\\\\_\\\\.]+' // valid characters in the variable name\n    };\n  }\n\n\n  /**\n   * data-rg-setinitial=\"<controllerProperty> [@@convertType|convertTypeDont]\"\n   * Parse the \"data-rg-setinitial\" attribute in the form tag.\n   * Get the element value and set the controller property value. The element is input, textarea or select tag.\n   * Examples:\n   * data-rg-setinitial=\"product\" or data-rg-setinitial=\"product @@convertType\" - convert data type automatically, for example: '5' convert to Number, or JSON to Object\n   * data-rg-setinitial=\"employee.name @@convertTypeDont\" - do not convert data type automatically\n   * @returns {void}\n   */\n  rgSetinitial() {\n    this._debug('rgSetinitial', '--------- rgSetinitial ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-setinitial';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgSetinitial', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty @@convertTypeNot'\n      if (!attrVal) { console.error(`rgSetinitial Error:: Attribute has bad definition (data-rg-setinitial=\"${attrVal}\").`); continue; }\n\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim();\n\n      const convertType_param = !!attrValSplited[1] ? attrValSplited[1].trim() : ''; // 'convertType' | 'convertTypeDont'\n      const convertType = convertType_param === 'convertTypeDont' ? false : true;\n\n      const val = this._getElementValue(elem, convertType);\n      this._setControllerValue(prop, val);\n\n      this._debug('rgSetinitial', `elem.type:: ${elem.type} -- set initial --> ${prop}:: ${val}`, 'navy');\n    }\n  }\n\n\n  /************** GENERATORS (create or remove HTML elements) *************/\n  /**\n   * data-rg-for=\"<controllerProperty> [@@<priority>]\"\n   * Parse the \"data-rg-for\" attribute. Multiply element by the controllerProperty array value.\n   * Element with the higher priprity will be parsed before.\n   * Examples:\n   * data-rg-for=\"companies\"\n   * data-rg-for=\"company.employers\"\n   * data-rg-for=\"company.employers @@ 2\" --> priority is 2\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgFor(attrValQuery) {\n    this._debug('rgFor', `--------- rgFor (start) ------`, 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-for';\n    this._removeParentElements(attrName, attrValQuery);\n    let elems = this._listElements(attrName, attrValQuery);\n    elems = this._sortElementsByPriority(elems, attrName); // sorted elements\n    this._debug('rgFor', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName); // company.employers\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const priority = !!attrValSplited[1] ? attrValSplited[1].trim() : 0;\n\n      const prop = attrValSplited[0].trim();\n      const val = this._getControllerValue(prop);\n\n      // remove all gen elems\n      this._genElem_remove(elem, attrName, attrVal);\n\n      if (this._debug().rgFor) { console.log('rgFor -->', 'attrVal::', attrVal, ' | val::', val, ' priority::', priority); }\n      if (!val || (!!val && !val.length)) { elem.style.display = 'none'; continue; }\n\n      // generate new element and place it in the sibling position\n      const newElem = this._genElem_create(elem, attrName, attrVal);\n\n      // multiply new element by cloning and adding sibling elements\n      const newElemsTotal = val.length;\n      for (let i = 1; i <= newElemsTotal; i++) {\n        const i2 = newElemsTotal - i; // when newElemsTotal=4 then i2 has 3,2,1,0\n        elem.parentNode.insertBefore(newElem, elem.nextSibling);\n        let outerHTML = this._solve_$i(i2, newElem.outerHTML, priority); // replace $i, $i1, $i12 with the number\n        outerHTML = this._solveInterpolated(outerHTML); // parse interpolated text in the variable name, for example: pet_{{$model.pets.$i0._id}}\n        outerHTML = this._solveMath(outerHTML); // calculte for example solveMath/$i0 + 1/\n        newElem.outerHTML = outerHTML;\n      }\n\n    }\n\n    this._debug('rgFor', '--------- rgFor (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * data-rg-repeat=\"controllerProperty\"\n   * Parse the \"data-rg-repeat\" attribute. Repeat the element n times wher n is defined in the controller property.\n   * It's same as rgFor() except the controller property is not array but number.\n   * Examples:\n   * data-rg-repeat=\"totalRows\"\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgRepeat(attrValQuery) {\n    this._debug('rgRepeat', `--------- rgRepeat (start) ------`, 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-repeat';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgRepeat', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n\n      const prop = attrVal.trim();\n      const val = +this._getControllerValue(prop);\n      this._debug('rgRepeat', `Element will be repeated ${val} times.`, 'navy');\n\n      // remove all gen elems\n      this._genElem_remove(elem, attrName, attrVal);\n\n      // generate new element and place it in the sibling position\n      const newElem = this._genElem_create(elem, attrName, attrVal);\n\n      // multiply element by cloning and adding sibling elements\n      const newElemsTotal = +val;\n      for (let i = 1; i <= newElemsTotal; i++) {\n        const i2 = newElemsTotal - i; // 3,2,1,0\n        elem.parentNode.insertBefore(newElem, elem.nextSibling);\n        let outerHTML = this._solve_$i(i2, newElem.outerHTML); // replace $i, $i1, $i12 with the number\n        outerHTML = this._solveInterpolated(outerHTML); // parse interpolated text in the variable name, for example: pet_{{$model.pets.$i0._id}}\n        outerHTML = this._solveMath(outerHTML);\n        newElem.outerHTML = outerHTML;\n      }\n\n    }\n\n    this._debug('rgRepeat', '--------- rgRepeat (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n  /**\n   * data-rg-print=\"<controllerProperty> [@@ inner|outer|sibling|prepend|append]\"\n   * data-rg-print=\"company.name @@ inner\"\n   * data-rg-print=\"company.name @@ inner @@ keep\"   - keep the innerHTML when value is undefined\n   * Parse the \"data-rg-print\" attribute. Print the controller's property to view.\n   * Examples:\n   * data-rg-print=\"product\" - product is the controller property\n   * data-rg-print=\"product.name @@ outer\"\n   * data-rg-print=\"product.name @@ sibling\"\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * for example product.name in the data-rg-print=\"product.name @@ inner\". This speed up parsing because it's limited only to one element.\n   * @returns {void}\n   */\n  rgPrint(attrValQuery) {\n    this._debug('rgPrint', `--------- rgPrint (start) ------`, 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-print';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgPrint', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      // get val and apply pipe to the val\n      const propPipe = attrValSplited[0].trim(); // controller property name with pipe:  company.name | slice(0,21)\n      const propPipeSplitted = propPipe.split('|');\n      const prop = propPipeSplitted[0].trim(); // company.name\n      let val = this._getControllerValue(prop);\n\n      // correct val\n      const toKeep = !!attrValSplited[2] ? attrValSplited[2].trim() === 'keep' : false; // to keep the innerHTML as value when val is undefined\n      if (val === undefined) { val = toKeep ? elem.innerHTML : ''; } // the default value is defined in the HTML tag\n      else if (typeof val === 'object') { val = JSON.stringify(val); }\n      else if (typeof val === 'number') { val = +val; }\n      else if (typeof val === 'string') { val = val; }\n      else if (typeof val === 'boolean') { val = val.toString(); }\n      else { val = val; }\n\n      // apply pipe, for example: data-rg-print=\"val | slice(0,130)\"\n      let pipe_funcDef = propPipeSplitted[1]; // slice(0, 130), json, ...\n      if (!!pipe_funcDef && !!val) {\n        pipe_funcDef = pipe_funcDef.trim();\n        const { funcName, funcArgs } = this._funcParse(pipe_funcDef, elem);\n        if (typeof val[funcName] === 'function') { val = val[funcName](...funcArgs); }\n      }\n\n      // define action\n      let act = attrValSplited[1] || 'inner';\n      act = act.trim();\n\n      // remove all gen elems\n      this._genElem_remove(elem, attrName, attrVal);\n\n      // generate new element and place it in the sibling position\n      let newElem;\n      if (act !== 'inner') { newElem = this._genElem_create(elem, attrName, attrVal); }\n\n\n      // load content in the element\n      if (act === 'inner') {\n        elem.innerHTML = val;\n      } else if (act === 'outer') {\n        const id2 = newElem.getAttribute('data-rg-print-id');\n        newElem.outerHTML = `<span data-rg-print-gen=\"${attrVal}\" data-rg-print-id=\"${id2}\">${val}</span>`;\n      } else if (act === 'sibling') {\n        elem.style.display = '';\n        const id2 = newElem.getAttribute('data-rg-print-id');\n        newElem.outerHTML = `<span data-rg-print-gen=\"${attrVal}\" data-rg-print-id=\"${id2}\">${val}</span>`;\n      } else if (act === 'prepend') {\n        newElem.innerHTML = val + ' ' + elem.innerHTML;\n      } else if (act === 'append') {\n        newElem.innerHTML = elem.innerHTML + ' ' + val;\n      } else if (act === 'inset') {\n        newElem.innerHTML = elem.innerHTML.replace('{{}}', val);\n      } else {\n        elem.innerHTML = val;\n      }\n\n      this._debug('rgPrint', `rgPrint:: ${propPipe} = ${val} -- act::\"${act}\" -- toKeep::${toKeep}`, 'navy');\n    }\n\n    this._debug('rgPrint', '--------- rgPrint (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n\n  /************ NON-GENERATORS (will not generate new HTML elements or remove existing - will not change the DOM structure) ***********/\n  /**\n   * data-rg-if=\"<controllerProperty>\"\n   * Parse the \"data-rg-if\" attribute. Show or hide the HTML element by setting display:none.\n   * Examples:\n   * data-rg-if=\"this.ifAge\" - rend() will not be triggered when this.ifAge is changed\n   * data-rg-if=\"$model.ifAge $eq(22)\" - rend() will be triggered when $model.ifAge is changed\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgIf(attrValQuery) {\n    this._debug('rgIf', '--------- rgIf (start) ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-if';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgIf', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName).trim(); // age_tf , $model.age === 3, age > this.myAge , age < $model.yourAge , age $lt($model.age)\n      if (!attrVal) { console.error(`Attribute \"data-rg-if\" has bad definition (data-rg-if=\"${attrVal}\").`); continue; }\n\n      /* define tf */\n      let tf = false;\n      if (/\\!|<|>|=/.test(attrVal)) {\n        // parse data-rg-if with = < > && ||: data-rg-if=\"5<2\", data-rg-if=\"$model.age >= $model.myAge\", data-rg-if=\"this.age > 3\" (this. will not be rendered)\n        tf = this._calcComparison_A(attrVal);\n      } else {\n        // parse data-rg-if with pure controller value: data-rg-if=\"is_active\"\n        // parse data-rg-if with the comparison operators: $not(), $eq(22), $ne(22), ...  --> data-rg-if=\"age $eq(5)\" , data-rg-if=\"$model.age $eq($model.myAge)\", data-rg-if=\"$model.age $gt(this.myNum)\"\n        tf = this._calcComparison_B(attrVal);\n      }\n\n      /* hide/show elem */\n      if (tf) {\n        const dataRgPrint_attrVal = elem.getAttribute('data-rg-print');\n        if (!!dataRgPrint_attrVal && /outer|sibling|prepend|append|inset/.test(dataRgPrint_attrVal)) { elem.style.display = 'none'; } // element with data-rg-print should stay hidden because of _genElem_create()\n        else { elem.style.display = ''; }\n      } else {\n        elem.style.display = 'none';\n      }\n\n      this._debug('rgIf', `rgIf:: <${elem.tagName} data-rg-if=\"${attrVal}\"> => tf: ${tf} -- outerHTML: ${elem.outerHTML}`, 'navy');\n    }\n\n    this._debug('rgIf', '--------- rgIf (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * data-rg-spinner=\"<controllerProperty>\"\n   * Parse the \"data-rg-spinner\" attribute. Load the spinner inside data-rg-spinner element when expression with $model is true.\n   * This method acts like rgIf.\n   * @param {string} bool - to show or hide the element\n   * @returns {void}\n   */\n  rgSpinner(attrValQuery) {\n    this._debug('rgSpinner', '--------- rgSpinner (start) ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-spinner';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgSpinner', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName).trim(); // ifAge\n      if (!attrVal) { console.error(`Attribute \"data-rg-spinner\" has bad definition (data-rg-spinner=\"${attrVal}\").`); continue; }\n\n      /* define tf */\n      let tf = false;\n      if (/\\!|<|>|=/.test(attrVal)) {\n        // parse data-rg-if with = < > && ||: data-rg-if=\"5<2\", data-rg-if=\"$model.age >= $model.myAge\", data-rg-if=\"this.age > 3\" (this. will not be rendered)\n        tf = this._calcComparison_A(attrVal);\n      } else {\n        // parse data-rg-if with pure controller value: data-rg-if=\"is_active\"\n        // parse data-rg-if with the comparison operators: $not(), $eq(22), $ne(22), ...  --> data-rg-if=\"age $eq(5)\" , data-rg-if=\"$model.age $eq($model.myAge)\", data-rg-if=\"$model.age $gt(this.myNum)\"\n        tf = this._calcComparison_B(attrVal);\n      }\n\n      /* hide/show spinner */\n      if (tf) {\n        const styleScoped = `\n        <span data-rg-spinner-gen>\n          <style scoped>\n            [data-rg-spinner]>span:after {\n              content: '';\n              display: block;\n              font-size: 10px;\n              width: 1em;\n              height: 1em;\n              margin-top: -0.5em;\n              animation: spinner 1500ms infinite linear;\n              border-radius: 0.5em;\n              box-shadow: #BEBEBE 1.5em 0 0 0, #BEBEBE 1.1em 1.1em 0 0, #BEBEBE 0 1.5em 0 0, #BEBEBE -1.1em 1.1em 0 0, #BEBEBE -1.5em 0 0 0, #BEBEBE -1.1em -1.1em 0 0, #BEBEBE 0 -1.5em 0 0, #BEBEBE 1.1em -1.1em 0 0;\n            }\n            @-webkit-keyframes spinner {\n              0% { transform: rotate(0deg);}\n              100% { transform: rotate(360deg); }\n            }\n            @-moz-keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n            @-o-keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n            @keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          </style>\n        </span>\n        `;\n\n        // 1. add SPAN and STYLE tags\n        elem.insertAdjacentHTML('beforeend', styleScoped);\n\n        // 2. center span spinner in the parent element\n        const elemRect = elem.getBoundingClientRect(); // {x,y,width,height}}\n        const spinnerElem = elem.querySelector('span[data-rg-spinner-gen]');\n\n        spinnerElem.style.position = 'relative';\n\n        const x = elemRect.width / 2;\n        spinnerElem.style.left = x + 'px';\n\n        const y = elemRect.height / 2;\n        spinnerElem.style.top = y + 'px';\n\n        this._debug('rgSpinner', `spinner position:: x=${x}px , y=${y}px`, 'navy');\n\n      } else {\n        elem.innerHTML = '';\n      }\n\n      this._debug('rgSpinner', `rgSpinner:: <${elem.tagName} data-rg-spinner=\"${attrVal}\"> => tf: ${tf}`, 'navy');\n    }\n\n    this._debug('rgSpinner', '--------- rgSpinner (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * data-rg-switch=\"<controllerProperty> [@@ multiple]\"\n   * Parse the \"data-rg-switch\" attribute. Show or hide elements depending if \"data-rg-switchcase\" value matches controller property.\n   * Examples:\n   * data-rg-switch=\"ctrlprop\" - ctrlprop is string, number or boolean\n   * data-rg-switch=\"ctrlprop @@ multiple\" - ctrlprop is array of string, number or boolean\n   * Notice @@ multiple can select multiple switchcases.\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgSwitch(attrValQuery) {\n    this._debug('rgSwitch', '--------- rgSwitch (start) ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-switch';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgSwitch', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty @@ multiple'\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const isMultiple = !!attrValSplited[1] ? attrValSplited[1].trim() === 'multiple' : false;\n\n      const prop = attrValSplited[0].trim();\n      const val = this._getControllerValue(prop);\n\n      // get data-rg-switchcase and data-rg-switchdefault attribute values\n      const switchcaseElems = elem.querySelectorAll('[data-rg-switch] > [data-rg-switchcase]');\n      const switchdefaultElem = elem.querySelector('[data-rg-switch] > [data-rg-switchdefault]');\n\n      // set data-rg-switchcase\n      let isMatched = false; // is data-rg-switchcase value matched\n      for (const switchcaseElem of switchcaseElems) {\n        let switchcaseAttrVal = switchcaseElem.getAttribute('data-rg-switchcase');\n        switchcaseAttrVal = switchcaseAttrVal.trim();\n\n        if (!isMultiple && switchcaseAttrVal === val) { switchcaseElem.style.display = ''; isMatched = true; }\n        else if (isMultiple && val && val.indexOf(switchcaseAttrVal) !== -1) { switchcaseElem.style.display = ''; isMatched = true; }\n        else { switchcaseElem.style.display = 'none'; }\n\n        this._debug('rgSwitch', `data-rg-switch=\"${attrVal}\" data-rg-switchcase=\"${switchcaseAttrVal}\" --val:: \"${val}\" --isMatched: ${isMatched}`, 'navy');\n      }\n\n      // set data-rg-switchdefault\n      if (!!switchdefaultElem) { !isMatched ? switchdefaultElem.style.display = '' : switchdefaultElem.style.display = 'none'; }\n\n      this._debug('rgSwitch', `data-rg-switch=\"${attrVal}\" data-rg-switchdefault --isMatched: ${isMatched}`, 'navy');\n    }\n\n    this._debug('rgSwitch', '--------- rgSwitch (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * data-rg-disabled=\"<controllerProperty>\"\n   * Parse the \"data-rg-disabled\" attribute. set the element to disabled state.\n   * Examples:\n   * data-rg-disabled=\"ifAge\"\n   * data-rg-disabled=\"ifAge $eq(22)\"\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgDisabled(attrValQuery) {\n    this._debug('rgDisabled', '--------- rgDisabled (start) ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-disabled';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgDisabled', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName).trim(); // ifAge\n      if (!attrVal) { console.error(`rgDisabled Error:: Attribute has bad definition (data-rg-disabled=\"${attrVal}\").`); continue; }\n\n      /* define tf */\n      let tf = false;\n      if (/\\!|<|>|=/.test(attrVal)) {\n        // parse data-rg-if with = < > && ||: data-rg-if=\"5<2\", data-rg-if=\"$model.age >= $model.myAge\", data-rg-if=\"this.age > 3\" (this. will not be rendered)\n        tf = this._calcComparison_A(attrVal);\n      } else {\n        // parse data-rg-if with pure controller value: data-rg-if=\"is_active\"\n        // parse data-rg-if with the comparison operators: $not(), $eq(22), $ne(22), ...  --> data-rg-if=\"age $eq(5)\" , data-rg-if=\"$model.age $eq($model.myAge)\", data-rg-if=\"$model.age $gt(this.myNum)\"\n        tf = this._calcComparison_B(attrVal);\n      }\n\n      /* disable/enable the element */\n      if (tf) { elem.disabled = true; }\n      else { elem.disabled = false; }\n\n      this._debug('rgDisabled', `rgDisabled:: data-rg-disabled=\"${attrVal}\" -- outerHTML: ${elem.outerHTML}`, 'navy');\n    }\n\n    this._debug('rgDisabled', '--------- rgDisabled (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * data-rg-value=\"<controllerProperty>\"\n   * Parse the \"data-rg-value\" attribute. Sets the element's \"value\" attribute from the controller property value.\n   * Examples:\n   * data-rg-value=\"product\"\n   * data-rg-value=\"$model.employee.name\"\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgValue(attrValQuery) {\n    this._debug('rgValue', '--------- rgValue ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-value';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgValue', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      if (!attrVal) { console.error(`rgValue Error:: Attribute has bad definition (data-rg-value=\"${attrVal}\").`); continue; }\n\n      const prop = attrVal.trim();\n      const val = this._getControllerValue(prop);\n\n      this._setElementValue(elem, val);\n\n      this._debug('rgValue', `elem.type:: ${elem.type} -- ${prop}:: ${val}`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-checked=\"<controllerProperty>\"\n   * Sets the \"checked\" attribute with the controller property value.\n   * The controller property is an array. If the checkbox value is in that array then the checkbox is checked.\n   * Use it for checkboxes only.\n   * Examples:\n   * data-rg-checked=\"selectedProducts\"\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgChecked(attrValQuery) {\n    this._debug('rgChecked', '--------- rgChecked ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-checked';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgChecked', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName);\n      if (!attrVal) { console.error(`rgChecked Error:: Attribute has bad definition (data-rg-checked=\"${attrVal}\").`); continue; }\n\n      const prop = attrVal.trim();\n      const val = this._getControllerValue(prop); // val must be array\n      if (!Array.isArray(val)) { console.error(`rgChecked Error:: The controller property ${prop} is not array.`); continue; }\n\n      if (val.indexOf(elem.value) !== -1) { elem.checked = true; }\n      else { elem.checked = false; }\n\n      this._debug('rgChecked', `elem.type:: ${elem.type} -- ${prop}:: ${val}`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-class=\"<controllerProperty> [@@ add|replace]\"\n   * Parse the \"data-rg-class\" attribute. Set element class attribute.\n   * Examples:\n   * data-rg-class=\"myKlass\" - add new classes to existing classes\n   * data-rg-class=\"myKlass @@ add\" - add new classes to existing classes\n   * data-rg-class=\"myKlass @@ replace\" - replace existing classes with new classes\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgClass(attrValQuery) {\n    this._debug('rgClass', '--------- rgClass ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-class';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgClass', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty'\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim(); // controller property name company.name\n      const valArr = this._getControllerValue(prop) || []; // ['my-bold', 'my-italic']\n      if (!Array.isArray(valArr)) { console.log(`%c rgClassWarn:: The controller property \"${prop}\" is not an array.`, `color:Maroon; background:LightYellow`); continue; }\n\n      let act = attrValSplited[1] || '';\n      act = act.trim() || 'add';\n\n      if (act == 'replace' && !!valArr.length) { elem.removeAttribute('class'); }\n      for (const val of valArr) { elem.classList.add(val); }\n\n      this._debug('rgClass', `data-rg-class=\"${attrVal}\" --- ctrlProp:: ${prop} | ctrlVal:: ${valArr} | act:: ${act}`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-style=\"<controllerProperty> [@@ add|replace]\"\n   * Parse the \"data-rg-style\" attribute. Set element style attribute.\n   * Examples:\n   * data-rg-style=\"myStyl\" - add new styles to existing sytles\n   * data-rg-style=\"myStyl @@ add\" - add new styles to existing sytles\n   * data-rg-style=\"myStyl @@ replace\" - replace existing styles with new styles\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgStyle(attrValQuery) {\n    this._debug('rgStyle', '--------- rgStyle ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-style';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgStyle', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'controllerProperty'\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim();\n      const valObj = this._getControllerValue(prop); // {fontSize: '21px', color: 'red'}\n\n      let act = attrValSplited[1] || '';\n      act = act.trim() || 'add';\n\n      if (act == 'replace') { elem.removeAttribute('style'); }\n\n      let styleProps = [];\n      if (!!valObj) {\n        styleProps = Object.keys(valObj);\n        for (const styleProp of styleProps) { elem.style[styleProp] = valObj[styleProp]; }\n      }\n\n      this._debug('rgStyle', `data-rg-style=\"${attrVal}\" --- prop:: \"${prop}\" | styleProps:: \"${styleProps}\" | act:: \"${act}\"`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-src\"<controllerProperty> [@@<defaultSrc>]\"\n   * Parse the \"data-rg-src\" attribute. Set element src attribute.\n   * Examples:\n   * data-rg-src=\"imageURL\" - define <img src=\"\">\n   * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n   * @returns {void}\n   */\n  rgSrc(attrValQuery) {\n    this._debug('rgSrc', '--------- rgSrc ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-src';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgSrc', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || '';\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim();\n      const val = this._getControllerValue(prop);\n\n      // when val is undefined load defaultSrc\n      let defaultSrc = attrValSplited[1] || '';\n      defaultSrc = defaultSrc.trim();\n\n      const src = val || defaultSrc;\n      elem.src = src;\n\n      this._debug('rgSrc', `data-rg-src=\"${attrVal}\" --prop:: \"${prop}\" --src:: \"${src}\"`, 'navy');\n    }\n  }\n\n\n\n  /**\n  * data-rg-attr\"<controllerProperty> [@@<attributeName>]\"\n  * Parse the \"data-rg-attr\" attribute. Set element's attribute value.\n  * Examples:\n  * data-rg-attr=\"pageURL @@ href\" - define <a href=\"\">\n  * @param {string|RegExp} attrValQuery - controller property name, query for the attribute value\n  * @returns {void}\n  */\n  rgAttr(attrValQuery) {\n    this._debug('rgAttr', '--------- rgAttr ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-attr';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgAttr', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // pageURL @@ href\n      const attrValSplited = attrVal.split(this.$rg.separator);\n\n      const prop = attrValSplited[0].trim();\n      const val = this._getControllerValue(prop);\n\n      if (!attrValSplited[1]) { console.error(`Attribute name is not defined in the ${attrName}=\"${attrVal}\".`); continue; }\n      const attribute_name = attrValSplited[1].trim(); // href\n\n      elem.setAttribute(attribute_name, val);\n\n      this._debug('rgAttr', `data-rg-attr=\"${attrVal}\" --prop:: \"${prop}\" --val:: \"${val}\" --> added ${attribute_name}=\"${val}\"`, 'navy');\n    }\n  }\n\n\n\n  /**\n   * data-rg-elem=\"<rgelemsProp>\"     --> rgelemsProp is the property of the this.$rg.elems, for example data-rg-elem=\"myElement\" => this.$rg.elems.myElement\n   * Parse the \"data-rg-elem\" attribute. Transfer the DOM element to the controller property \"this.$rg.elems\".\n   * Examples:\n   * data-rg-elem=\"paragraf\" -> fetch it with this.$rg.elems['paragraf']\n   * @param {string|RegExp} attrValQuery - query for the attribute value\n   * @returns {void}\n   */\n  rgElem(attrValQuery) {\n    this._debug('rgElem', '--------- rgElem ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-elem';\n    const elems = this._listElements(attrName, attrValQuery);\n    this._debug('rgElem', `found elements:: ${elems.length} | attrValQuery:: ${attrValQuery}`, 'navy');\n    if (!elems.length) { return; }\n\n    // associate values\n    for (const elem of elems) {\n      const attrVal = elem.getAttribute(attrName) || ''; // 'paragraf'\n      this.$rg.elems[attrVal] = elem;\n    }\n  }\n\n\n\n  /**\n   * data-rg-echo=\"<text>\"\n   * Parse the \"data-rg-echo\" attribute. Prints the \"text\" in the HTML element as innerHTML.\n   * Examples:\n   * data-rg-echo=\"$i+1\"  --> prints the iteration number\n   * @returns {void}\n   */\n  rgEcho() {\n    this._debug('rgEcho', '--------- rgEcho (start) ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-echo';\n    const elems = this._listElements(attrName, '');\n    this._debug('rgEcho', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    // associate values\n    for (const elem of elems) {\n      let txt = elem.getAttribute('data-rg-echo');\n\n      this._debug('rgEcho', `rgEcho txt before: ${txt}`, 'navy', '#B6ECFF');\n\n      txt = this._solveInterpolated(txt); // parse interpolated text in the variable name, for example: pet_{{$model.pets.$i0._id}}\n      txt = this._solveMath(txt); // calculte for example solveMath/$i0 + 1/\n      txt = txt.replace(/\\[/g, '<').replace(/\\]/g, '>'); // solve html tags, [b style='color:red']3[/b]\n\n      this._debug('rgEcho', `rgEcho txt after: ${txt}\\n`, 'navy', '#B6ECFF');\n\n      elem.innerHTML = txt;\n    }\n\n    this._debug('rgEcho', '--------- rgEcho (end) ------', 'navy', '#B6ECFF');\n  }\n\n\n\n  /**\n   * Parse the words with i18n> prefix and replace it with the corersponding word in /i18n/{lang}.json\n   */\n  rgI18n() {\n\n  }\n\n\n\n}\n\n\nexport default DataRg;\n","import DataRg from './DataRg.js';\n\n\nclass View extends DataRg {\n\n  constructor() {\n    super();\n    // window.regochWeber.viewsCached is defined by the App:controllerViewsCached()\n  }\n\n\n\n  /************** INCLUDES ****************/\n  /**\n   * Include HTML components with the data-rg-inc attribute.\n   * Process:\n   * 1) Select all elements which has data-rg-inc but not data-rg-cin.\n   * 2) Put data-rg-cin which marks that the data-rg-inc element has beed parsed.\n   * 3) Load the content in the data-rg-inc element as inner, outer, sibling, append or prepend. Every loaded element will have data-rg-incgen attribute to mark elements generated with data-rg.inc.\n   * 4) Add data-rg-cin attribute to the element with the data-rg-inc to mark that the content is loaded and prevent load in the next iteration.\n   * ) Multiple iterations will haeppen when data-rg-inc elements are nested. In case of multiple iterations only in the first iteration will be deleted all data-rg-incgen elements to make reset.\n   * Examples:\n   * <header data-rg-inc=\"/html/header.html\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@  @@ h2 > small\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@ inner\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@ prepend\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@ append\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@ outer @@ h2 > small\">---header---</header>\n   * <header data-rg-inc=\"/html/header.html @@ outer @@ b:nth-child(2)\"></header>\n   * @param {boolean} delIncgens - delete data-rg-incgen elements (only in the first iteration)\n   * @returns {void}\n   */\n  async rgInc(delIncgens = true) {\n    const elems = document.querySelectorAll('[data-rg-inc]:not([data-rg-cin])');\n    this._debug('rgInc', '--------- rgInc ------', '#8B0892', '#EDA1F1');\n    this._debug('rgInc', `elems found: ${elems.length}`, '#8B0892');\n    if (!elems.length) { return; }\n\n    // remove all data-rg-incgen elements (just first iteration)\n    if (delIncgens) {\n      const elems2 = document.querySelectorAll('[data-rg-incgen]');\n      this._debug('rgInc', `data-rg-incgen elems deleted: ${elems2.length}`, '#8B0892');\n      for (const elem2 of elems2) { elem2.remove(); }\n    }\n\n    for (const elem of elems) {\n      // extract attribute data\n      const attrValue = elem.getAttribute('data-rg-inc');\n      const path_dest_cssSel = attrValue.replace(/\\s+/g, '').replace(/^\\//, '').split(this.$rg.separator); // remove empty spaces and leading /\n      const viewPath = !!path_dest_cssSel && !!path_dest_cssSel.length ? 'inc/' + path_dest_cssSel[0] : '';\n      const dest = !!path_dest_cssSel && path_dest_cssSel.length >= 2 ? path_dest_cssSel[1] : 'inner';\n      const cssSel = !!path_dest_cssSel && path_dest_cssSel.length === 3 ? path_dest_cssSel[2] : '';\n      if (this._debug().rgInc) { console.log('\\n******** path_dest_cssSel:: ', viewPath, dest, cssSel, '********'); }\n      if (!viewPath) { console.error('viewPath is not defined'); return; }\n\n      // Get HTML content. First try from the cached JSON and if it doesn't exist then request from the server.\n      let nodes, str;\n      if (!!window && !!window.regochWeber && !!window.regochWeber.viewsCached && !!window.regochWeber.viewsCached[viewPath]) { // HTML content from the cached file /cache/views.json\n        const cnt = this.fetchCachedView(viewPath, cssSel);\n        nodes = cnt.nodes;\n        str = cnt.str;\n        this._debug('rgInc', '--from cached JSON', '#8B0892');\n      } else { // HTML content by requesting the server\n        const cnt = await this.fetchRemoteView(viewPath, cssSel);\n        nodes = cnt.nodes;\n        str = cnt.str;\n        this._debug('rgInc', '--from server', '#8B0892');\n      }\n\n      if (this._debug().rgInc) {\n        console.log('elem::', elem);\n        console.log('nodes loaded::', nodes);\n        // console.log('str loaded::', str);\n      }\n\n\n      // load content in the element\n      if (dest === 'inner') {\n        elem.innerHTML = str;\n\n      } else if (dest === 'outer') {\n        elem.outerHTML = str;\n\n      } else if (dest === 'sibling') {\n        const parent = elem.parentNode;\n        const sibling = elem.nextSibling;\n        for (const node of nodes) {\n          if (!node) { return; }\n          const nodeCloned = node.cloneNode(true); // clone the node because inserBefore will delete it\n          if (nodeCloned.nodeType === 1) {\n            nodeCloned.setAttribute('data-rg-incgen', ''); // add attribute data-rg-incgen to mark generated nodes\n            if (!elem.hasAttribute('data-rg-cin')) { parent.insertBefore(nodeCloned, sibling); }\n          }\n        }\n\n      } else if (dest === 'prepend') {\n        const i = nodes.length;\n        for (let i = nodes.length - 1; i >= 0; i--) {\n          if (!!nodes.length && !nodes[i]) { return; }\n          const nodeCloned = nodes[i].cloneNode(true);\n          if (nodeCloned.nodeType === 1) {\n            nodeCloned.setAttribute('data-rg-incgen', '');\n            if (!elem.hasAttribute('data-rg-cin')) { elem.prepend(nodeCloned); }\n          }\n        }\n\n      } else if (dest === 'append') {\n        for (const node of nodes) {\n          if (!node) { return; }\n          const nodeCloned = node.cloneNode(true);\n          if (nodeCloned.nodeType === 1) {\n            nodeCloned.setAttribute('data-rg-incgen', '');\n            if (!elem.hasAttribute('data-rg-cin')) { elem.append(nodeCloned); }\n          }\n        }\n\n      }\n\n\n      // set \"data-rg-cin\" attribute which marks that the content is included in the data-rg-inc element and parse process is finished\n      elem.setAttribute('data-rg-cin', '');\n\n      // continue with the next parse iteration (when data-rg-inc elements are nested)\n      if (/data-rg-inc/.test(str)) { await this.rgInc(false); }\n\n    }\n\n  }\n\n\n  /************** VIEWS ****************/\n  /**\n   * Parse elements with the data-rg-view attribute and load router views.\n   * This method should be used in the controller.\n   * When 'sibling', 'prepend' and 'append' is used comment and text nodes will not be injected (only HTML elements (nodeType === 1)).\n   * Example: <main data-rg-view=\"#main\"></main> and in the controller await this.loadView('#sibling', 'pages/home/sibling.html', 'sibling');\n   * @param {string} viewName - view name, for example: '#home'\n   * @param {string} viewPath - view file path (relative to /view/ directory): 'pages/home/main.html'\n   * @param {string} dest - destination where to place the view: inner, outer, sibling, prepend, append\n   * @param {string} cssSel - CSS selector to load part of the view file: 'div > p.bolded:nth-child(2)'\n   * @returns {elem:Element, str:string, nodes:Node[]}\n   */\n  async loadView(viewName, viewPath, dest = 'inner', cssSel) {\n    const attrSel = `[data-rg-view=\"${viewName}\"]`;\n\n    // get a HTML element with data-rg-view attribute\n    const elem = document.querySelector(attrSel);\n    this._debug('loadView', `--------- loadView ${attrSel} -- ${viewPath} ---------`, '#8B0892', '#EDA1F1');\n    if (this._debug().loadView) { console.log('elem::', elem); }\n    if (!elem) { throw new Error(`Element ${attrSel} not found.`); }\n    if (!viewPath) { throw new Error(`View path is not defined.`); }\n\n    // Get HTML content. First try from the cached JSON and if it doesn't exist then request from the server.\n    let nodes, str;\n    if (!!window && !!window.regochWeber && !!window.regochWeber.viewsCached && !!window.regochWeber.viewsCached[viewPath]) { // HTML content from the cached file /cache/views.json\n      const cnt = this.fetchCachedView(viewPath, cssSel);\n      nodes = cnt.nodes;\n      str = cnt.str;\n      this._debug('loadView', '--from cached JSON', '#8B0892');\n    } else { // HTML content by requesting the server\n      const cnt = await this.fetchRemoteView(viewPath, cssSel);\n      nodes = cnt.nodes;\n      str = cnt.str;\n      this._debug('loadView', '--from server', '#8B0892');\n    }\n\n    if (this._debug().loadView) {\n      console.log('nodes loaded::', nodes);\n      // console.log('str loaded::', str);\n    }\n\n\n    // empty content from the element by removing the data-rg-viewgen elements\n    this.emptyView(viewName, dest);\n\n\n    // load content in the element\n    if (dest === 'inner') {\n      elem.innerHTML = str;\n\n    } else if (dest === 'outer') {\n      elem.outerHTML = str;\n\n    } else if (dest === 'sibling') {\n      const parent = elem.parentNode;\n      const sibling = elem.nextSibling;\n      for (const node of nodes) {\n        const nodeCloned = node.cloneNode(true); // clone the node because insertBefore will delete it\n        if (nodeCloned.nodeType === 1) {\n          nodeCloned.setAttribute('data-rg-viewgen', viewName); // mark generated nodes\n          parent.insertBefore(nodeCloned, sibling);\n        }\n      }\n\n    } else if (dest === 'prepend') {\n      const i = nodes.length;\n      for (let i = nodes.length - 1; i >= 0; i--) {\n        const nodeCloned = nodes[i].cloneNode(true);\n        if (nodeCloned.nodeType === 1) {\n          nodeCloned.setAttribute('data-rg-viewgen', viewName);\n          elem.prepend(nodeCloned);\n        }\n      }\n\n    } else if (dest === 'append') {\n      for (const node of nodes) {\n        const nodeCloned = node.cloneNode(true);\n        if (nodeCloned.nodeType === 1) {\n          nodeCloned.setAttribute('data-rg-viewgen', viewName);\n          elem.append(nodeCloned);\n        }\n      }\n\n    }\n\n    return { elem, str, nodes };\n  }\n\n\n\n  /**\n   * Load multiple views.\n   * TIP: When using isAsync=false cache views in the regoch.json.\n   * @param {any[][]} viewDefs - array of arrays: [[viewName, viewPath, dest, cssSel]]\n   * @param {boolean} isAsync - to load asynchronously one by one (default: true)\n   * @returns {void}\n   */\n  async loadViews(viewDefs, isAsync = true) {\n    for (const viewDef of viewDefs) {\n      const viewName = viewDef[0];\n      const viewPath = viewDef[1];\n      const dest = viewDef[2];\n      const cssSel = viewDef[3];\n      !!isAsync ? await this.loadView(viewName, viewPath, dest, cssSel) : this.loadView(viewName, viewPath, dest, cssSel);\n    }\n  }\n\n\n\n  /**\n   * Empty a\n   * @param {string} viewName - view name\n   * @param {string} dest - destination where the view was placed: inner, outer, sibling, prepend, append\n   * @returns {void}\n   */\n  emptyView(viewName, dest = 'inner') {\n    const attrSel = `[data-rg-view=\"${viewName}\"]`;\n    const elem = document.querySelector(attrSel);\n    this._debug('emptyView', `--------- emptyView ${attrSel} | ${dest} ---------`, '#8B0892', '#EDA1F1');\n    if (this._debug().emptyView) { console.log('elem::', elem); }\n    if (!elem) { return; }\n\n    // empty the interpolated content\n    if (dest === 'inner') {\n      elem.innerHTML = '';\n    } else if (dest === 'outer') {\n      elem.outerHTML = '';\n    } else if (dest === 'sibling') {\n      for (const genElem of document.querySelectorAll(`[data-rg-viewgen=\"${viewName}\"`)) { genElem.remove(); }\n    } else if (dest === 'prepend') {\n      for (const genElem of document.querySelectorAll(`[data-rg-viewgen=\"${viewName}\"`)) { genElem.remove(); }\n    } else if (dest === 'append') {\n      for (const genElem of document.querySelectorAll(`[data-rg-viewgen=\"${viewName}\"`)) { genElem.remove(); }\n    }\n\n  }\n\n\n  /**\n   * To show body content or not. This method is used to prevent flicker effects.\n   * The HTML content in body tag shouldn't be visible until all data is not fetched in init() and all data-rg- elements are not rendered in rend().\n   * Use this method in the controller's loader(), init(), postrend() --> this.showViews(true|false);\n   * Also it can be used in the app.preflight() and app.postflight() to affect all controllers.\n   * @param {boolean} bool - true or false\n   * @param {boolean} spinner - true or false, to show the spinner during transition time\n   */\n  showViews(bool, spinner) {\n    /*** without spinner - whole body will be hidden ***/\n    if (!spinner) {\n      if (bool) { document.body.style.visibility = 'visible'; }\n      else { document.body.style.visibility = 'hidden'; }\n      return;\n    }\n\n\n    /*** with spinner - only body child tags will be hidden***/\n    // hide/show all body child tag nodes\n    for (const childNode of document.body.childNodes) {\n      if (childNode.nodeType === 1) {\n        if (bool) { childNode.style.visibility = 'visible'; }\n        else { childNode.style.visibility = 'hidden'; }\n      }\n    }\n\n    // hide/show loading spinner\n    const divElem = document.createElement('div');\n    divElem.setAttribute('data-rg-spinner-showviews', '');\n    const styleScoped = `\n        <span>\n          <style scoped>\n            [data-rg-spinner-showviews]>span:after {\n              content: '';\n              display: block;\n              font-size: 13px;\n              width: 1em;\n              height: 1em;\n              margin-top: 55px;\n              margin-left: auto;\n              margin-right: auto;\n              animation: spinner 1500ms infinite linear;\n              border-radius: 0.5em;\n              box-shadow: #BEBEBE 1.5em 0 0 0, #BEBEBE 1.1em 1.1em 0 0, #BEBEBE 0 1.5em 0 0, #BEBEBE -1.1em 1.1em 0 0, #BEBEBE -1.5em 0 0 0, #BEBEBE -1.1em -1.1em 0 0, #BEBEBE 0 -1.5em 0 0, #BEBEBE 1.1em -1.1em 0 0;\n            }\n            @-webkit-keyframes spinner {\n              0% { transform: rotate(0deg);}\n              100% { transform: rotate(360deg); }\n            }\n            @-moz-keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n            @-o-keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n            @keyframes spinner {\n              0% { transform: rotate(0deg); }\n              100% { transform: rotate(360deg); }\n            }\n          </style>\n        </span>\n        `;\n\n    divElem.insertAdjacentHTML('beforeend', styleScoped);\n    if (bool) {\n      const foundDivElem = document.querySelector('[data-rg-spinner-showviews]');\n      document.body.removeChild(foundDivElem);\n    } else {\n      document.body.prepend(divElem);\n    }\n  }\n\n\n\n\n\n  /*************** HTML CONTENT FETCHERS *****************/\n  /**\n   * Fetch view from a cached file app/cache/views.json.\n   * @param {string} viewPath - view file path (relative to /view/ directory): 'pages/home/main.html'\n   * @param {string} cssSel - CSS selector to load part of the view file: 'div > p.bolded:nth-child(2)'\n   * @returns {object}\n   */\n  fetchCachedView(viewPath, cssSel) {\n    // convert HTML string to Document\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(window.regochWeber.viewsCached[viewPath], 'text/html');\n\n    // define nodes and string\n    let nodes; // array of DOM nodes (Node[])\n    let str; // HTML content as string (string)\n    if (!cssSel) {\n      nodes = /\\<title|\\<meta|\\<link\\<base/.test(window.regochWeber.viewsCached[viewPath]) ? doc.head.childNodes : doc.body.childNodes;\n      str = window.regochWeber.viewsCached[viewPath];\n    } else {\n      const elem = doc.querySelector(cssSel);\n      nodes = [elem];\n      str = !!elem ? elem.outerHTML : '';\n    }\n\n    return { nodes, str };\n  }\n\n\n  /**\n   * Fetch view by sending a HTTP request to the server.\n   * @param {string} viewPath - view file path (relative to /view/ directory): 'pages/home/main.html'\n   * @param {string} cssSel - CSS selector to load part of the view file: 'div > p.bolded:nth-child(2)'\n   * @returns {object}\n   */\n  async fetchRemoteView(viewPath, cssSel) {\n    const path = `/client/views/${viewPath}`; // /client/views/pages/home/main.html\n    const url = new URL(path, this.$baseURIhost).toString(); // resolve the URL\n    const answer = await this.$httpClient.askHTML(url, cssSel);\n    const content = answer.res.content;\n    if (answer.status !== 200 || !content) { throw new Error(`Status isn't 200 or content is empty for ${viewPath}`); }\n\n    const nodes = answer.res.content.nodes; // Node[]\n    const str = answer.res.content.str; // string\n\n    return { nodes, str };\n  }\n\n\n\n  /************ JS LOADERS *********/\n  /**\n   * Create <script> tags and execute js scripts.\n   * @param {string[]} urls - array of JS script URLs\n   * @param {number} waitMS - wait for miliseconds before loading process\n   */\n  async lazyJS(urls, waitMS = 0) {\n    if (!urls) { return; }\n    for (const url of urls) {\n      await new Promise(r => setTimeout(r, waitMS));\n      // check if SCRIPT already exists and if exists remove it\n      const elems = document.body.querySelectorAll(`script[src=\"${url}\"]`);\n      if (elems.length) { this.unlazyJS([url]); }\n\n      // add the SCRIPT tag\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      script.defer = true;\n      script.setAttribute('data-rg-lazyjs', '');\n      document.body.appendChild(script);\n    }\n  }\n\n\n  /**\n   * Remove SCRIPT tag with data-rg-lazyjs attribute and the specific url.\n   * @param {string[] | undefined} urls - array of JS script URLs\n   */\n  unlazyJS(urls) {\n    if (!urls) { return; }\n    for (const url of urls) {\n      const elems = document.body.querySelectorAll(`script[src=\"${url}\"][data-rg-lazyjs]`);\n      for (const elem of elems) {\n        if (!!elem) { elem.remove(); }\n      }\n    }\n  }\n\n\n  /**\n   * Remove all SCRIPT tags with the data-rg-lazyjs attribute.\n   */\n  unlazyAllJS() {\n    const elems = document.querySelectorAll('script[data-rg-lazyjs]') || [];\n    for (const elem of elems) {\n      if (!!elem) { elem.remove(); }\n    }\n  }\n\n\n  /**\n   * Do not create <script> tags, just load js scripts.\n   * This can work only for local files due to CORS.\n   * @param {string[]} urls - array of JS script URLs\n   */\n  async loadJS(urls) {\n    if (!urls) { return; }\n    for (let url of urls) {\n      // correct the URL\n      url = url.trim();\n      if (!/^http/.test(url)) {\n        url = new URL(url, this.$baseURIhost).toString(); // resolve the URL\n      }\n\n      const jsContents = [];\n      const answer = await this.$httpClient.askJS(url);\n      jsContents.push(answer.res.content);\n      for (const jsContent of jsContents) { eval(jsContent); }\n    }\n  }\n\n\n  /**\n   * <script src=\"...\" data-rg-lazyjs>\n   * Parse the \"data-rg-lazyjs\" attribute. Reload all SCRIPT elements with data-rg-lazyjs attribute.\n   * Remove all SCRIPT tags with the data-rg-lazyjs attributes and immediatelly after reload them.\n   * @param {number} waitMS - wait for miliseconds before loading process\n   * @returns {Promise<void>}\n   */\n  async rgLazyjs(waitMS = 0) {\n    this._debug('rgLazyjs', '--------- rgLazyjs ------', 'navy', '#B6ECFF');\n\n    const attrName = 'data-rg-lazyjs';\n    const elems = document.querySelectorAll(`[${attrName}]`);\n\n    this._debug('rgLazyjs', `found elements:: ${elems.length}`, 'navy');\n    if (!elems.length) { return; }\n\n    const urls = []; // url in the src attribute\n    for (const elem of elems) {\n      const url = elem.getAttribute('src');\n      this._debug('rgLazyjs', `  src=\"${url}\"`, 'navy');\n      urls.push(url);\n    }\n\n    this.unlazyAllJS();\n    await this.lazyJS(urls, waitMS);\n  }\n\n\n\n\n  /************ CSS LOADERS *********/\n  /**\n   * Create <link rel=\"stylesheet\"> tags and load CSS.\n   * Usually use it in the loader() controller hook.\n   * @param {string[]} urls - array of CSS file URLs, ['/client/assets/css/common.css', '/client/assets/css/home.css']\n   */\n  loadCSS(urls) {\n    if (!urls) { return; }\n    for (const url of urls) {\n      // check if LINK tag already exists and if exists remove it\n      const elems = document.body.querySelectorAll(`link[href=\"${url}\"]`);\n      if (elems.length) { this.unloadCSS([url]); }\n\n      // create LINK tag\n      const linkCSS = document.createElement('link');\n      linkCSS.setAttribute('rel', 'stylesheet');\n      linkCSS.setAttribute('href', url);\n      linkCSS.defer = true;\n      document.head.appendChild(linkCSS);\n    }\n  }\n\n  /**\n   * Remove <link rel=\"stylesheet\"> tags and unload CSS.\n   * Usually use it in the loader() controller hook.\n   * @param {string[]} urls - array of CSS file URLs, ['/client/assets/css/common.css', '/client/assets/css/home.css'] or just ['/client/assets/css/'] to remove all folder files\n   */\n  unloadCSS(urls) {\n    if (!urls) { return; }\n    for (const url of urls) {\n      const elems = document.head.querySelectorAll(`link[rel=\"stylesheet\"][href=\"${url}\"]`);\n      for (const elem of elems) {\n        if (!!elem) { elem.remove(); }\n      }\n    }\n  }\n\n  /**\n   * Append <style data-rg-ref=\"#reference\"></style> tags in the <head>.\n   * Usually use it in the loader() controller hook.\n   * @param {string} cssRules - CSS rules, for example: div {font-weight: bold; color:red;}\n   * @param {string} ref - reference\n   */\n  addCSS(cssRules, ref) {\n    const style = document.createElement('style');\n    style.textContent = cssRules;\n    style.setAttribute('type', 'text/css');\n    style.setAttribute('data-rg-ref', ref);\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Remove <style data-rg-ref=\"#reference\"></style> tag.\n   * Usually use it in the destroy() controller hook.\n   * @param {string} ref - reference\n   */\n  delCSS(ref) {\n    const style = document.createElement(`style[data-rg-ref=\"${ref}\"]`);\n    if (!!style) { style.remove(); }\n  }\n\n\n\n\n  /*************** PAGE HEAD *************/\n  /**\n   * Set the text in the <title> tag.\n   * @param {string} title\n   */\n  setTitle(title) {\n    document.title = title;\n  }\n\n  /**\n   * Set the page description.\n   * @param {string} desc\n   */\n  setDescription(desc) {\n    const elem = document.head.querySelector('meta[name=\"description\"]');\n    if (!elem) { throw new Error('The meta[name=\"description\"] tag is not placed in the HTML file.'); }\n    elem.setAttribute('content', desc);\n  }\n\n  /**\n   * Set the page keywords.\n   * @param {string} kys - for example: 'regoch, app, database'\n   */\n  setKeywords(kys) {\n    const elem = document.head.querySelector('meta[name=\"keywords\"]');\n    if (!elem) { throw new Error('The meta[name=\"keywords\"] tag is not placed in the HTML file.'); }\n    elem.setAttribute('content', kys);\n  }\n\n\n  /**\n   * Set the document language.\n   * @param {string} langCode - 'en' | 'hr' | 'de' | ...\n   */\n  setLang(langCode) {\n    const elem = document.querySelector('html');\n    elem.setAttribute('lang', langCode);\n  }\n\n\n  /**\n   * Load the <head> tag content from the view file.\n   * @param {string} viewPath - view file path (relative to /view/ directory): 'pages/home/head.html'\n   * @param {string} dest - destination where to place the view: inner, prepend, append\n   */\n  async loadHead(viewPath, dest = 'inner') {\n    // get the <head> HTML element\n    const elem = document.querySelector('head');\n    this._debug('loadHead', `--------- loadHead -- ${viewPath} ---------`, '#8B0892', '#EDA1F1');\n    if (this._debug().loadView) { console.log('elem::', elem); }\n    if (!elem) { throw new Error(`Element HEAD not found.`); }\n    if (!viewPath) { throw new Error(`View path is not defined.`); }\n\n    // Get HTML content. First try from the cached JSON and if it doesn't exist then request from the server.\n    let nodes, str;\n    if (!!window.regochWeber.viewsCached[viewPath]) { // HTML content from the cached file /cache/views.json\n      const cnt = this.fetchCachedView(viewPath);\n      nodes = cnt.nodes;\n      str = cnt.str;\n      this._debug('loadHead', '--from cached JSON', '#8B0892');\n    } else { // HTML content by requesting the server\n      const cnt = await this.fetchRemoteView(viewPath);\n      nodes = cnt.nodes;\n      str = cnt.str;\n      this._debug('loadHead', '--from server', '#8B0892');\n    }\n\n    if (this._debug().loadHead) { console.log('nodes::', nodes); }\n    if (this._debug().loadHead) { console.log('str::', str); }\n\n\n    // remove previously generated elements, i.e. elements with the data-rg-headgen attribute\n    for (const genElem of document.querySelectorAll(`[data-rg-headgen`)) { genElem.remove(); }\n\n\n    // load content in the head\n    if (dest === 'inner') {\n      elem.innerHTML = str;\n\n    } else if (dest === 'prepend') {\n      const i = nodes.length;\n      for (let i = nodes.length - 1; i >= 0; i--) {\n        const nodeCloned = nodes[i].cloneNode(true);\n        if (nodeCloned.nodeType === 1) {\n          nodeCloned.setAttribute('data-rg-headgen', '');\n          elem.prepend(nodeCloned);\n        }\n      }\n\n    } else if (dest === 'append') {\n      for (const node of nodes) {\n        const nodeCloned = node.cloneNode(true);\n        if (nodeCloned.nodeType === 1) {\n          nodeCloned.setAttribute('data-rg-headgen', '');\n          elem.append(nodeCloned);\n        }\n      }\n\n    }\n\n    return { elem, str, nodes };\n  }\n\n\n\n\n\n}\n\n\n\n\nexport default View;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Terminology\n * =================================\n * route :string - defined route in the def() method - /room/subscribe/:room_name/:id\n * routeParsed.full :string - full route (start and end slashes removed) - 'room/subscribe/:room_name/:id'\n * routeParsed.segments :number - number the full route segments (with param parts) - 4\n * routeParsed.base :number - route part without params segments (start and end slashes removed) - 'room/subscribe'\n *\n * uri :string - current URI - /room/subscribe/sasa/123?x=123&y=abc&z=false\n * uriParsed.path :string - complete uri (start and end slashes removed) - '/room/subscribe/sasa/123'\n * uriParsed.segments :number - number of the uri segments - 4\n * uriParsed.queryString :string - uri part after question mark as string - 'x=123&y=abc&z=false'\n * uriParsed.queryObject :object - uri part parsed as object - {x: 123, y: 'abc', z: false}\n *\n * body :any - data sent along with uri as the transitional object - trx: {uri, body}\n *\n * func :Function - route function - a function which is executed when certain route is matched against the uri\n * trx :object - transitional object which can be changed in the route functions, required field is \"uri\" - {uri, body, uriParsed, routeParsed, params, query}\n *\n * Notice\n *-----------\n * Variables \"uri\" and \"body\" are analogous to HTTP POST request, for example:  POST /room/subscribe/sasa/123?key=999  {a: 'something})\n */\n\n\n\nclass RegochRouter {\n\n  /**\n   * @param {object} routerOpts - router initial options {debug:boolean}\n   */\n  constructor(routerOpts) {\n    this.routerOpts = routerOpts || {};\n    this.trx; // transitional object {uri:string, body:any, ...}\n    this.routeDefs = []; // route definitions [{route:string, routeParsed:object, funcs:Function[] }]\n  }\n\n\n  /**\n   * Set transitional object.\n   * @param {object} obj - {uri, body, ...}\n   * @returns {void}\n   */\n  set trx(obj) {\n    // required properties\n    if (!obj.uri) { throw new Error('The \"uri\" property is required.'); }\n\n    // \"uri\" and \"body\" as properties with constant value (can not be modified)\n    Object.defineProperty(obj, 'uri', {\n      value: obj.uri,\n      writable: false\n    });\n\n    Object.defineProperty(obj, 'body', {\n      value: obj.body,\n      writable: false\n    });\n\n    // parse uri\n    obj.uriParsed = this._uriParser(obj.uri);\n\n    this._trx = obj;\n  }\n\n\n  /**\n   * Get transitional object.\n   * @returns {object} - {uri, body, ...}\n   */\n  get trx() {\n    return this._trx;\n  }\n\n\n\n  /**\n   * Define route, routeParsed and corresponding functions.\n   * @param {string} route - /room/subscribe/:room_name\n   * @param {Function[]} funcs - route functions, middlewares\n   * @returns {Router}\n   */\n  when(route, ...funcs) {\n    this.routeDefs.push({\n      route,\n      routeParsed: this._routeParser(route),\n      funcs\n    });\n    return this;\n  }\n\n\n  /**\n   * Redirect from one route to another route.\n   * @param {string} fromRoute - new route\n   * @param {string} toRoute - destination route (where to redirect)\n   * @param {Function} cb - callback function executed during redirection process, it's a route middleware appended to toRoute middlewares\n   * @returns {Router}\n   */\n  redirect(fromRoute, toRoute, cb) {\n    const toRouteDef = this.routeDefs.find(routeDef => routeDef.route === toRoute); // {route, routeParsed, funcs}\n    const toFuncs = !!toRouteDef ? toRouteDef.funcs : [];\n    this.when(fromRoute, cb, ...toFuncs); // assign destination functions to the new route\n    return this;\n  }\n\n\n  /**\n   * Define special route <notfound>\n   * @param {Function[]} funcs - middlewares which will be executed when route is not matched aginst URI\n   * @returns {Router}\n   */\n  notfound(...funcs) {\n    this.when('<notfound>', ...funcs);\n    return this;\n  }\n\n\n\n  /**\n   * Define special route <do>\n   * @param {Function[]} funcs - middlewares which will be executed on every request, e.g. every exe()\n   * @returns {Router}\n   */\n  do(...funcs) {\n    this.when('<do>', ...funcs);\n    return this;\n  }\n\n\n\n\n  /**\n   * Find the matched route and execute its middlewares.\n   * @returns {Promise<object>}\n   */\n  async exe() {\n    const trx_cloned = { ...this.trx }; // clone trx in case that this.trx is changing to fast\n    const uriParsed = trx_cloned.uriParsed; // shop/register/john/23\n\n    /*** FIND ROUTE ***/\n    // found route definition\n    const routeDef_found = this.routeDefs.find(routeDef => { // {route, routeParsed, funcs}\n      const routeParsed = routeDef.routeParsed; // {full, segments, base}\n      return this._routeRegexMatchNoParams(routeParsed, uriParsed) || this._routeWithParamsMatch(routeParsed, uriParsed);\n    });\n\n    // not found route definition\n    const routeDef_notfound = this.routeDefs.find(routeDef => routeDef.route === '<notfound>');\n\n    // do route definition\n    const routeDef_do = this.routeDefs.find(routeDef => routeDef.route === '<do>');\n\n    /*** EXECUTE FOUND ROUTE FUNCTIONS */\n    if (!!routeDef_found) {\n      trx_cloned.routeParsed = routeDef_found.routeParsed;\n      trx_cloned.query = uriParsed.queryObject;\n      trx_cloned.params = !!trx_cloned.routeParsed ? this._getParams(routeDef_found.routeParsed.full, uriParsed.path) : {};\n\n      for (const func of routeDef_found.funcs) { await func(trx_cloned); }\n    } else if (!!routeDef_notfound) {\n      for (const func of routeDef_notfound.funcs) { await func(trx_cloned); }\n    }\n\n\n    if (!!routeDef_do && !!routeDef_do.funcs && !!routeDef_do.funcs.length) {\n      for (const func of routeDef_do.funcs) { await func(trx_cloned); }\n    }\n\n\n    return trx_cloned;\n  }\n\n\n\n\n\n  /*********** ROUTE MATCHES  ***********/\n\n  /**\n   * Route regular expression match against the uri. Parameters are not defined in the route e.g. there is no /: chars.\n   * For example:\n   *       (route) /ads/autos/bmw - (uri) /ads/autos/bmw -> true\n   *       (route) /ads/a.+s/bmw  - (uri) /ads/autos/bmw -> true\n   * @param {object} routeParsed - {full, segments, base}\n   * @param {object} uriParsed - {path, segments, queryString, queryObject}\n   * @returns {boolean}\n   */\n  _routeRegexMatchNoParams(routeParsed, uriParsed) {\n    const routeReg = new RegExp(`^${routeParsed.full}$`, 'i');\n    const tf1 = routeReg.test(uriParsed.path); // route must match uri\n    const tf2 = routeParsed.segments === uriParsed.segments; // route and uri must have same number of segments\n    const tf = tf1 && tf2;\n    if (this.routerOpts.debug) { console.log(`\\n_routeRegexMatchNoParams:: (route) ${routeParsed.full} - (uri) ${uriParsed.path} -> ${tf}`); }\n    return tf;\n  }\n\n\n  /**\n   * Route with parameters match against the uri.\n   * (route) /shop/register/:name/:age - (uri) /shop/register/john/23\n   * @param {object} routeParsed - {full, segments, base}\n   * @param {object} uriParsed - {path, segments, queryString, queryObject}\n   * @returns {boolean}\n   */\n  _routeWithParamsMatch(routeParsed, uriParsed) {\n    const routeReg = new RegExp(`^${routeParsed.base}\\/`, 'i');\n    const tf1 = routeReg.test(uriParsed.path); // route base must match uri\n    const tf2 = routeParsed.segments === uriParsed.segments; // route and uri must have same number of segments\n    const tf3 = /\\/\\:/.test(routeParsed.full); // route must have at least one /:\n    const tf = tf1 && tf2 && tf3;\n    if (this.routerOpts.debug) { console.log(`_routeWithParamsMatch:: (route) ${routeParsed.full} - (uri) ${uriParsed.path} -> ${tf}`); }\n    return tf;\n  }\n\n\n\n\n  /*********** HELPERS  ***********/\n\n  /**\n   * Removing slashes from the beginning and the end.\n   * /ads/autos/bmw/ --> ads/autos/bmw\n   * //ads/autos/bmw/// --> ads/autos/bmw\n   * @param {string} path - uri path or route\n   * @returns {string}\n   */\n  _removeSlashes(path) {\n    return path.trim().replace(/^\\/+/, '').replace(/\\/+$/, '');\n  }\n\n\n  /**\n   * Convert string into integer, float or boolean.\n   * @param {string} value\n   * @returns {string | number | boolean | object}\n   */\n  _typeConvertor(value) {\n    function isJSON(str) {\n      try { JSON.parse(str); }\n      catch (err) { return false; }\n      return true;\n    }\n\n    if (!!value && !isNaN(value) && value.indexOf('.') === -1) { // convert string into integer (12)\n      value = parseInt(value, 10);\n    } else if (!!value && !isNaN(value) && value.indexOf('.') !== -1) { // convert string into float (12.35)\n      value = parseFloat(value);\n    } else if (value === 'true' || value === 'false') { // convert string into boolean (true)\n      value = JSON.parse(value);\n    } else if (isJSON(value)) {\n      value = JSON.parse(value);\n    }\n\n    return value;\n  }\n\n\n\n  /**\n   * Create query object from query string.\n   * @param  {string} queryString - x=abc&y=123&z=true\n   * @return {object}             - {x: 'abc', y: 123, z: true}\n   */\n  _toQueryObject(queryString) {\n    const queryArr = queryString.split('&');\n    const queryObject = {};\n\n    let eqParts, property, value;\n    queryArr.forEach(elem => {\n      eqParts = elem.split('='); // equotion parts\n      property = eqParts[0];\n      value = eqParts[1];\n\n      value = this._typeConvertor(value); // t y p e   c o n v e r s i o n\n\n      queryObject[property] = value;\n    });\n\n    return queryObject;\n  }\n\n\n\n  /**\n   * URI parser\n   * @param  {string} uri - /shop/register/john/23?x=abc&y=123&z=true  (uri === trx.uri)\n   * @returns {path:string, queryString:string, queryObject:object} - {path: 'shop/register/john/23', queryString: 'x=abc&y=123&z=true', queryObject: {x: 'abc', y: 123, z: true}}\n   */\n  _uriParser(uri) {\n    const uriDivided = uri.split('?');\n\n    const path = this._removeSlashes(uriDivided[0]); // /shop/register/john/23 -> shop/register/john/23\n    const segments = path.split('/').length;\n    const queryString = uriDivided[1];\n    const queryObject = !!queryString ? this._toQueryObject(queryString) : {};\n\n    const uriParsed = { path, segments, queryString, queryObject };\n    return uriParsed;\n  }\n\n\n  /**\n   * Route parser.\n   * Converts route string into the parsed object {full, segments, parser} which is used for matching against the URI.\n   * @param  {string} route - /shop/register/:name/:age/\n   * @returns {full:string, segments:number, base:string} - {full: 'shop/register/:name/:age', segments: 4, base: 'shop/register'}\n   */\n  _routeParser(route) {\n    const full = this._removeSlashes(route);\n    const segments = full.split('/').length;\n    const base = full.replace(/\\/\\:.+/, ''); // shop/register/:name/:age --> shop/register\n\n    const routeParsed = { full, segments, base };\n    return routeParsed;\n  }\n\n\n\n  /**\n   * Create parameters object.\n   * For example if route is /register/:name/:age AND uri is /register/john/23 then params is {name: 'john', age: 23}\n   * @param  {string} routeParsedFull - routeParsed.full -- shop/register/:name/:age\n   * @param  {string} uriParsedPath  - uriParsed.path -- shop/register/john/23\n   * @returns {object}\n   */\n  _getParams(routeParsedFull, uriParsedPath) {\n    const routeParts = routeParsedFull.split('/'); // ['shop', 'register', ':name', ':age']\n    const uriParts = uriParsedPath.split('/'); // ['shop', 'register', 'john', 23]\n\n    const params = {};\n\n    routeParts.forEach((routePart, index) => {\n      if (/\\:/.test(routePart)) {\n        const property = routePart.replace(/^\\:/, ''); // remove :\n\n        let value = uriParts[index];\n        value = this._typeConvertor(value); // t y p e   c o n v e r s i o n\n\n        params[property] = value;\n      }\n    });\n\n    return params;\n  }\n\n\n\n\n\n}\n\n\n\n\n\nexport default RegochRouter;\n\n","import RegochRouter from './RegochRouter.js';\n\n\nclass Router extends RegochRouter {\n\n  constructor(debugRouter, debug) {\n    super({ debug });\n    this.debugRouter = debugRouter;\n  }\n\n\n  /**\n   * Define the routes\n   * @param {string} route - route, for example: '/page1.html'\n   * @param {object} ctrl - route controller instance\n   * @param {{authGuards:string[]}} routeOpts - route options: {authGuards: ['autoLogin', 'isLogged', 'hasRole']}\n   * @returns {void}\n   */\n  _when(route, ctrl, routeOpts = {}) {\n    const authGuards = routeOpts.authGuards || [];\n\n    // prechecks\n    if (!route && !!ctrl) { throw new Error(`Route is not defined for \"${ctrl.constructor.name}\" controller.`); }\n    if (!!route && !ctrl) { throw new Error(`Controller is not defined for route \"${route}\".`); }\n    if (/autoLogin|isLogged|hasRole/.test(authGuards.join()) && !ctrl.$auth) { throw new Error(`Auth guards (autoLogin, isLogged, hasRole) are used but Auth is not injected in the controller ${ctrl.constructor.name}. Use App::controllerAuth().`); }\n\n    const assign_ctrl = trx => { trx.ctrl = ctrl; }; // add ctrl in trx so that controller it can be used in preflight and postflight\n\n    const guards = [];\n    if (authGuards.length && ctrl.$auth) {\n      const autoLogin = ctrl.$auth.autoLogin.bind(ctrl.$auth);\n      const isLogged = ctrl.$auth.isLogged.bind(ctrl.$auth);\n      const hasRole = ctrl.$auth.hasRole.bind(ctrl.$auth);\n      if (authGuards.indexOf('autoLogin') !== -1) { guards.push(autoLogin); }\n      if (authGuards.indexOf('isLogged') !== -1) { guards.push(isLogged); }\n      if (authGuards.indexOf('hasRole') !== -1) { guards.push(hasRole); }\n    }\n\n    const preflight = !!ctrl.$preflight ? ctrl.$preflight : []; // array of preflight functions, will be executed on every route before the controller's loader()\n    const processing = ctrl.processing.bind(ctrl);\n    const postflight = !!ctrl.$postflight ? ctrl.$postflight : []; // array of postflight functions, will be executed on every route ater the controller's postrend()\n\n\n    this.when(route, assign_ctrl, ...guards, ...preflight, processing, ...postflight);\n  }\n\n\n\n  /**\n   * Define 404 not found route\n   * @param {object} ctrl - route controller instance\n   * @returns {void}\n   */\n  _notfound(ctrl) {\n    const processing = ctrl.processing.bind(ctrl);\n    this.notfound(processing);\n  }\n\n\n\n  /**\n   * Define functions which will be executed on every route.\n   * @param {Function[]} funcs - function which will be executed on every request, e.g. every exe()\n   * @returns {Router}\n   */\n  _do(...funcs) {\n    this.do(...funcs);\n  }\n\n\n\n  /**\n   * Redirect from one route to another route.\n   * @param {string} fromRoute - new route\n   * @param {string} toRoute - destination route (where to redirect)\n   * @returns {Router}\n   */\n  _redirect(fromRoute, toRoute) {\n    const cb = () => {\n      window.history.pushState(null, '', toRoute); // change URL in the address bar\n    };\n    this.redirect(fromRoute, toRoute, cb);\n  }\n\n\n\n  /**\n   * Match routes against current browser URI and execute matched route.\n   * @param {Event} pevent - popstate or pushstate event\n   * @returns {void}\n   */\n  async _exe(pevent) {\n    try {\n      const start = new Date();\n      let uri = window.location.pathname + window.location.search; // the current uri -  The uri is path + query string, without hash, for example: /page1.html?q=12\n      uri = decodeURI(uri); // /sh/po%C5%A1ta?field=title --> /sh/pošta?field=title\n\n      if (this.debugRouter) { console.log(`%c --------- router exe start --> ${uri} ------`, 'color:#680C72; background:#E59FED'); }\n\n      // execute matched route middlewares\n      this.trx = { uri, pevent };\n      const trx = await this.exe();\n\n      const end = new Date();\n      trx.elapsedTime = (end - start) + ' ms'; // in miliseconds\n\n      if (this.debugRouter) {\n        console.log('Router trx::', trx);\n        console.log(`%c --------- router exe end --> elapsedTime: ${this.trx.elapsedTime} ------`, 'color:#680C72; background:#E59FED');\n      }\n\n    } catch (err) {\n      if (/AuthWarn::/.test(err.message)) { console.log(`%c${err.message}`, `color:#FF6500; background:#FFFEEE;`); }\n      else { console.error(err); }\n    }\n  }\n\n\n\n}\n\n\n\n\n\nexport default Router;\n","class HTTPClient {\n\n  /**\n   * @param {Object} opts - HTTP Client options {encodeURI, timeout, retry, retryDelay, maxRedirects, headers}\n   */\n  constructor(opts) {\n    this.url;\n    this.protocol = 'http:';\n    this.hostname = '';\n    this.port = 80;\n    this.pathname = '/';\n    this.queryString = '';\n\n    if (!opts) {\n      this.opts = {\n        encodeURI: false,\n        timeout: 8000,\n        responseType: '', // 'blob' for file download (https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType)\n        retry: 3,\n        retryDelay: 5500,\n        maxRedirects: 3,\n        headers: {\n          'authorization': '',\n          'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n          'content-type': 'text/html; charset=UTF-8'\n        }\n      };\n    } else {\n      this.opts = opts;\n    }\n\n    // initial values for timeout, responseType and req_headers\n    this.timeout = this.opts.timeout;\n    this.responseType = this.opts.responseType;\n    this.req_headers = { ...this.opts.headers };\n\n    // init the xhr\n    this.xhr = new XMLHttpRequest();\n\n    // set interceptor\n    this.interceptor;\n  }\n\n\n\n\n  /********** REQUESTS *********/\n\n  /**\n   * Sending one HTTP request to HTTP server.\n   *  - 301 redirections are not handled.\n   *  - retries are not handled\n   * @param {string} url - https://www.example.com/something?q=15\n   * @param {string} method - GET, POST, PUT, DELETE, PATCH\n   * @param {any} body_obj - http body payload\n   * @returns {Promise<answer>}\n   */\n  async askOnce(url, method = 'GET', body_obj) {\n\n    // answer (response object)\n    const answer = {\n      requestURL: url,\n      requestMethod: method,\n      status: 0,\n      statusMessage: '',\n      https: false,\n      req: {\n        headers: this.req_headers,\n        payload: undefined\n      },\n      res: {\n        headers: undefined,\n        content: undefined\n      },\n      time: {\n        req: this._getTime(),\n        res: undefined,\n        duration: undefined\n      }\n    };\n\n\n    // check and correct URL\n    try {\n      url = this._parseUrl(url);\n      answer.requestURL = url;\n      answer.https = /^https/.test(this.protocol);\n    } catch (err) {\n      // if URL is not properly defined\n      const ans = { ...answer }; // clone object to prevent overwrite of object properies once promise is resolved\n      ans.status = 400; // client error - Bad Request\n      ans.statusMessage = err.message || 'Bad Request';\n      ans.time.res = this._getTime();\n      ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n      return ans; // send answer and stop further execution\n    }\n\n    /*** 0) intercept the request ***/\n    if (!!this.interceptor) { await this.interceptor(); }\n\n\n    /*** 1) init HTTP request ***/\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/open\n    this.xhr.open(method, url, true, null, null);\n\n\n    // set the xhr options (works only after the xhr is opened)\n    this._xhr_timeout(this.timeout);\n    this._xhr_responseType(this.responseType);\n    this._xhr_requestHeaders(this.req_headers);\n\n\n    /*** 2) add body to HTTP request ***/\n    if (!!body_obj && !/GET/i.test(method)) {\n      answer.req.payload = body_obj;\n\n      const contentType = this.req_headers['content-type'] || '';\n      let body2send;\n      if (/application\\/json/.test(contentType)) { body2send = JSON.stringify(body_obj); }\n      else { body2send = body_obj; }\n\n      /*** 3) send request to server (with body) ***/\n      this.xhr.send(body2send);\n\n    } else {\n      /*** 3) send request to server (without body) ***/\n      this.xhr.send();\n    }\n\n\n\n    /** 4) wait for response */\n    const promise = new Promise((resolve, reject) => {\n\n      this.xhr.onload = res => {\n        // format answer\n        const ans = { ...answer }; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = this.xhr.status; // 2xx -ok response, 4xx -client error (bad request), 5xx -server error\n        ans.statusMessage = this.xhr.statusText;\n        ans.res.headers = this.getResHeaders();\n        ans.res.content = res.target.response;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n        resolve(ans);\n      };\n\n\n      this.xhr.onerror = error => {\n        this.kill();\n        const err = this._formatError(error, url);\n\n        // format answer\n        const ans = { ...answer }; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = err.status;\n        ans.statusMessage = err.message;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n        // do not resolve if it's already resolved by timeout\n        resolve(ans);\n      };\n\n\n      this.xhr.ontimeout = () => {\n        this.kill();\n\n        // format answer\n        const ans = { ...answer }; // clone object to prevent overwrite of object properies once promise is resolved\n        ans.status = 408; // 408 - timeout\n        ans.statusMessage = `Request aborted due to timeout (${this.opts.timeout} ms) ${url} `;\n        ans.time.res = this._getTime();\n        ans.time.duration = this._getTimeDiff(ans.time.req, ans.time.res);\n\n        resolve(ans);\n      };\n\n    });\n\n    return promise;\n  }\n\n\n\n  /**\n   * Sending HTTP request to HTTP server.\n   *  - 301 redirections are handled.\n   *  - retries are handled\n   * @param {String} url - https://www.example.com/contact\n   * @param {String} method - GET, POST, PUT, DELETE, PATCH\n   * @param {Object} body_obj - http body\n   * @returns {Promise<answer>}\n   */\n  async ask(url, method = 'GET', body_obj) {\n\n    let answer = await this.askOnce(url, method, body_obj);\n    const answers = [answer];\n\n\n    /*** a) HANDLE 3XX REDIRECTS */\n    let redirectCounter = 1;\n\n    while (!!answer && /^3\\d{2}/.test(answer.status) && redirectCounter <= this.opts.maxRedirects) { // 300, 301, 302, ...\n\n      const url_new = new URL(url, answer.res.headers.location); // redirected URL is in 'location' header\n      console.log(`#${redirectCounter} redirection ${answer.status} from ${this.url} to ${url_new}`);\n\n      answer = await this.askOnce(url_new, method, body_obj); // repeat request with new url\n      answers.push(answer);\n\n      redirectCounter++;\n    }\n\n\n    /*** b) HANDLE RETRIES when status = 408 timeout */\n    let retryCounter = 1;\n\n    while (answer.status === 408 && retryCounter <= this.opts.retry) {\n      console.log(`#${retryCounter} retry due to timeout (${this.opts.timeout}) on ${url}`);\n      await new Promise(resolve => setTimeout(resolve, this.opts.retryDelay)); // delay before retrial\n\n      answer = await this.askOnce(url, method, body_obj);\n      answers.push(answer);\n\n      retryCounter++;\n    }\n\n\n    return answers;\n  }\n\n\n\n  /**\n   * Fetch the JSON. Redirections and retries are not handled.\n   * @param {string} url - https://api.example.com/someurl\n   * @param {string} method - GET, POST, PUT, DELETE, PATCH\n   * @param {object|string} body - http body as Object or String type\n   * @returns {Promise<answer>}\n   */\n  async askJSON(url, method = 'GET', body) {\n\n    // convert body string to object\n    let body_obj = body;\n    if (!!body && typeof body === 'string') {\n      try {\n        body_obj = JSON.parse(body);\n      } catch (err) {\n        throw new Error('Body string is not valid JSON.');\n      }\n    }\n\n    // JSON request headers\n    this.setReqHeaders({\n      'content-type': 'application/json; charset=utf-8',\n      'accept': 'application/json'\n    });\n\n    const answer = await this.askOnce(url, method, body_obj);\n\n    // convert content string to object\n    if (!!answer.res.content) {\n      try {\n        answer.res.content = JSON.parse(answer.res.content);\n      } catch (err) {\n        throw new Error('Response content is not valid JSON.');\n      }\n    }\n\n    return answer;\n  }\n\n\n\n  /**\n   * Get the HTML file content or part of it filtered by the css selector.\n   * NOTE: The answer.res.content contains a list of nodes and the HTML string  {Node[], string}.\n   * @param {string} url - http://example.com/page.html\n   * @param {string} cssSel - css selector: div>p.alert\n   * @returns {Promise<answer>}\n   */\n  async askHTML(url, cssSel) {\n    const answer = await this.askOnce(url);\n\n    // convert HTML string to Document\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(answer.res.content, 'text/html');\n\n    // define nodes and string\n    let nodes; // array of DOM nodes https://developer.mozilla.org/en-US/docs/Web/API/Node (Node[])\n    let str; // HTML content as string (string)\n    if (!cssSel) {\n      nodes = doc.body.childNodes;\n      str = answer.res.content;\n    } else {\n      const elem = doc.querySelector(cssSel);\n      nodes = [elem];\n      str = !!elem ? elem.outerHTML : '';\n    }\n\n    answer.res.content = { nodes, str };\n    return answer;\n  }\n\n\n\n  /**\n   * Get the content of the Javascript file.\n   * @param {string} url - https://api.example.com/someurl\n   * @returns {Promise<answer>}\n   */\n  async askJS(url) {\n    this.setReqHeaders({\n      'content-type': 'application/javascript; charset=utf-8',\n      'accept': 'application/javascript'\n    });\n    const answer = await this.askOnce(url, 'GET');\n    answer.res.content = answer.res.content;\n    return answer;\n  }\n\n\n\n  /**\n   * Send POST request where body is new FormData() object.\n   * For example (frontend code):\n   * // create from data\n   * const formData = new FormData();\n   * formData.append('db_id', db_id);\n   * formData.append('coll_name', coll_name);\n   * formData.append('csv_file', csv_file);\n   * @param {string} url - https://api.example.com/someurl\n   * @param {FormData} formData - the FormData instance\n   * @returns {Promise<answer>}\n   */\n  async sendFormData(url, formData) {\n    // content-type should be removed for multipart/form-data as defined at https://fetch.spec.whatwg.org/#typedefdef-xmlhttprequestbodyinit\n    this.setReqHeaders({\n      'content-type': `multipart/form-data`,\n      'accept': '*/*'\n    });\n    this.delReqHeaders(['content-type']);\n\n    const answer = await this.askOnce(url, 'POST', formData);\n\n    // convert content string to object\n    if (!!answer.res.content) {\n      try {\n        answer.res.content = JSON.parse(answer.res.content);\n      } catch (err) {\n        console.log('WARNING: Response content is not JSON.');\n      }\n    }\n\n    return answer;\n  }\n\n\n  /**\n   * Convert JS Object to FormData and prepare it for sendFormData()\n   * @param {object} formObj - object which needs to be converted\n   * @returns {FormData}\n   */\n  object2formdata(formObj) {\n    const formData = new FormData();\n    for (const [key, val] of Object.entries(formObj)) { formData.set(key, val); }\n    return formData;\n  }\n\n\n\n  /** TODO\n   * Send HTML Form fields. Custom boundary for multipart/form-data .\n   * @param {string} url - https://api.example.com/someurl\n   * @param {FormData} formData - the FormData instance\n   * @param {string} contentType - request header content-type value, which can be application/x-www-form-urlencoded or multipart/form-data (for files) or text/plain (Forms with mailto:)\n   * @returns {Promise<answer>}\n   */\n  async sendForm(url, formData, contentType = 'application/x-www-form-urlencoded') {\n    // define boundary\n    let boundary = 'RegochWebHttpClient';\n    boundary += Math.floor(Math.random() * 32768);\n    boundary += Math.floor(Math.random() * 32768);\n    boundary += Math.floor(Math.random() * 32768);\n    console.log('boundary::', boundary);\n\n    const body = `--${boundary}\\r\\nContent-Disposition: form-data; name=\"db_id\"\\r\\n\\r\\n12345\\r\\n--${boundary}--`;\n    console.log('body::', body);\n\n    const answer = await this.askOnce(url, 'POST', formData);\n    return answer;\n  }\n\n\n\n  /**\n   * Stop the sent request.\n   * @returns {void}\n   */\n  kill() {\n    this.xhr.abort();\n  }\n\n\n  /**\n   * Set the interceptor function which will be executed every time before the HTTP request is sent.\n   * @param {Function} interceptor - callback function, for example (httpClient) => { httpClient.setReqHeader('Authorization', 'JWT aswas); }\n   * @returns {void}\n   */\n  setInterceptor(interceptor) {\n    this.interceptor = interceptor.bind(this);\n  }\n\n\n\n\n\n  /********** HEADERS *********/\n\n  /**\n   * Change request header object. The headerObj will be appended to previously defined this.req_headers and headers with the same name will be overwritten.\n   * @param {Object} headerObj - {'authorization', 'user-agent', accept, 'cache-control', 'host', 'accept-encoding', 'connection'}\n   * @returns {void}\n   */\n  setReqHeaders(headerObj) {\n    Object.keys(headerObj).forEach(prop => {\n      const headerName = prop;\n      const headerValue = headerObj[prop];\n      this.setReqHeader(headerName, headerValue);\n    });\n  }\n\n  /**\n   * Set (add/update) request header.\n   * Previously defined header will be overwritten.\n   * @param {String} headerName - 'content-type'\n   * @param {String} headerValue - 'text/html; charset=UTF-8'\n   * @returns {void}\n   */\n  setReqHeader(headerName, headerValue) {\n    headerName = headerName.toLowerCase();\n    this.req_headers[headerName] = headerValue;\n  }\n\n  /**\n   * Delete multiple request headers.\n   * @param {Array} headerNames - array of header names, for example: ['content-type', 'accept']\n   * @returns {void}\n   */\n  delReqHeaders(headerNames) {\n    headerNames.forEach(headerName => {\n      delete this.req_headers[headerName];\n    });\n  }\n\n  /**\n   * Get request headers\n   * @returns {object}\n   */\n  getReqHeaders() {\n    return this.req_headers;\n  }\n\n\n  /**\n   * Get response HTTP headers.\n   * @returns {object}\n   */\n  getResHeaders() {\n    const headersStr = this.xhr.getAllResponseHeaders();\n    const headersArr = headersStr.split('\\n');\n    const headersObj = {};\n    headersArr.forEach(headerFull => {\n      const splited = headerFull.split(':');\n      const prop = splited[0];\n      if (prop) {\n        const val = splited[1].trim();\n        headersObj[prop] = val;\n      }\n    });\n    return headersObj;\n  }\n\n\n\n\n  /********** PRIVATES *********/\n\n  /**\n   * Parse url.\n   * @param {String} url - http://www.adsuu.com/some/thing.php?x=2&y=3\n   */\n  _parseUrl(url) {\n    url = this._correctUrl(url);\n    const urlObj = new URL(url);\n    this.url = url;\n    this.protocol = urlObj.protocol;\n    this.hostname = urlObj.hostname;\n    this.port = urlObj.port;\n    this.pathname = urlObj.pathname;\n    this.queryString = urlObj.search;\n\n    // debug\n    /*\n    console.log('this.url:: ', this.url); // http://localhost:8001/www/products?category=databases\n    console.log('this.protocol:: ', this.protocol); // http:\n    console.log('this.hostname:: ', this.hostname); // localhost\n    console.log('this.port:: ', this.port); // 8001\n    console.log('this.pathname:: ', this.pathname); // /www/products\n    console.log('this.queryString:: ', this.queryString); // ?category=databases\n    */\n\n    return url;\n  }\n\n\n  /**\n   * URL corrections\n   */\n  _correctUrl(url) {\n    if (!url) { throw new Error('URL is not defined'); }\n\n    // 1. trim from left and right\n    url = url.trim();\n\n    // 2. add protocol\n    if (!/^https?:\\/\\//.test(url)) {\n      url = 'http://' + url;\n    }\n\n    // 3. remove multiple empty spaces and insert %20\n    if (this.opts.encodeURI) {\n      url = encodeURI(url);\n    } else {\n      url = url.replace(/\\s+/g, ' ');\n      url = url.replace(/ /g, '%20');\n    }\n\n    return url;\n  }\n\n\n  /**\n   * Beautify error messages.\n   * @param {Error} error - original error\n   * @return formatted error\n   */\n  _formatError(error, url) {\n    // console.log('_formatError::', error, url);\n    const err = new Error(error);\n\n\n    // reformatting NodeJS errors\n    if (error.target.status === 0) {\n      err.status = 0;\n      err.message = `Status:0 Bad Request ${url}`;\n    } else {\n      err.status = error.status || 400;\n      err.message = error.message;\n    }\n\n    err.original = error;\n\n    return err; // formatted error is returned\n  }\n\n\n  /**\n   * Get current date/time\n   */\n  _getTime() {\n    const d = new Date();\n    return d.toISOString();\n  }\n\n\n  /**\n   * Get time difference in seconds\n   */\n  _getTimeDiff(start, end) {\n    const ds = new Date(start);\n    const de = new Date(end);\n    return (de.getTime() - ds.getTime()) / 1000;\n  }\n\n\n\n  /********** PRIVATE XHR OPTIONS *********/\n  /**\n   * Modify request headers. This is the headers sent to the server.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n   * To change it use header methods.\n   * @param {object} headers - headers object: { 'content-type': 'text/html', accept: 'application/json' }\n   * @returns {void}\n   */\n  _xhr_requestHeaders(headers) {\n    Object.keys(headers).forEach(prop => this.xhr.setRequestHeader(prop.toLowerCase(), headers[prop]));\n  }\n\n  /**\n   * Modify request timeout in miliseconds. This is the time for which will xhr wait for response from the server.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout\n   * To change it use: httpClient.timeout = 120000;\n   * @param {number} ms - the timeout period\n   * @returns {void}\n   */\n  _xhr_timeout(ms) {\n    this.xhr.timeout = +ms || 0; // 0 means the request will never be timeout\n  }\n\n  /**\n   * Modify the response type. This is the reponse tye which client expects from the server. For example 'blob' if client waits for file download.\n   * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType\n   * To change it use: httpClient.responseType = 'blob';\n   * @param {string} type - text, arraybuffer, blob, document, json, ms-stream\n   * @returns {void}\n   */\n  _xhr_responseType(type) {\n    this.xhr.responseType = type || 'text';\n  }\n\n\n\n}\n\n\nexport default HTTPClient;\n","/**\n * System Default MVC Debug Options\n */\nexport default {\n  // general\n  warnings: false,\n\n  // Router\n  router: false,\n  regochRouter: false,\n\n  // Controller.js\n  render: false,\n  navig: false,\n\n  // View.js\n  rgInc: false,\n  loadView: false,\n  emptyView: false,\n  loadHead: false,\n  rgLazyjs: false,\n\n  // DataRg.js\n  rgFor: false,\n  rgRepeat: false,\n  rgPrint: false,\n\n  rgIf: false,\n  rgSpinner: false,\n  rgSwitch: false,\n  rgDisabled: false,\n  rgValue: false,\n  rgChecked: false,\n  rgClass: false,\n  rgStyle: false,\n  rgSrc: false,\n  rgAttr: false,\n  rgElem: false,\n  rgEcho: false,\n\n  // DataRgListeners.js\n  rgKILL: false,\n  rgHref: false,\n  rgClick: false,\n  rgKeyup: false,\n  rgChange: false,\n  rgEvt: false,\n  rgSet: false,\n  rgModel: false\n};\n","import Router from './router/Router.js';\nimport navig from './lib/navig.js';\nimport HTTPClient from './lib/HTTPClient.js';\nimport debugOpts from './conf/$debugOpts.js';\n\nwindow.regochWeber = {}; // init global variable\n\n\n\nclass App {\n\n  constructor() {\n    this.ctrls = {}; // { ctrlName1: {}, ctrlName2: {} }\n    this.$debugOpts = debugOpts; // object with the debug parameters -- {rgFor: true, rgIf: false}\n  }\n\n  /*============================== CONTROLLERS ==============================*/\n  /**\n   * Create controller instances and inject into the app.ctrls.\n   * @param  {Class[]} Ctrls - array of controller classes\n   * @returns {App}\n   */\n  controllers(Ctrls) {\n    for (const Ctrl of Ctrls) {\n      const ctrl = new Ctrl(this);\n      this.ctrls[Ctrl.name] = ctrl;\n    }\n    this._httpClient(); // define ctrl.$httpClient and ctrl.$baseURIhost\n    return this;\n  }\n\n\n  /**\n   * Define controller property/value. Sometimes it's useful that all controllers have same property with the same value.\n   * @param {string} name - controller property name\n   * @param {any} val - value\n   * @returns\n   */\n  _controllerProp(name, val) {\n    const controllersCount = Object.keys(this.ctrls).length;\n    if (controllersCount === 0) { throw new Error(`The controller property \"${name}\" should be defined after the method controllers().`); }\n    for (const ctrlName of Object.keys(this.ctrls)) { this.ctrls[ctrlName][name] = val; }\n    return this;\n  }\n\n\n  /**\n   * Set the $httpClient and $baseURIhost property in all controllers.\n   * The $httpClient is the default controller's HTTP client. It can be invoked with this.$httpClient in the controller.\n   * The $httpClient is used in View.js.\n   * For methods see lib/HttpClient.\n   * @returns {App}\n   */\n  _httpClient() {\n    const opts = {\n      encodeURI: true,\n      timeout: 21000,\n      retry: 0,\n      retryDelay: 1300,\n      maxRedirects: 0,\n      headers: {\n        'authorization': '',\n        'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n        'content-type': 'text/html; charset=UTF-8'\n      }\n    };\n    const httpClient = new HTTPClient(opts);\n    this._controllerProp('$httpClient', httpClient);\n\n    const baseURIhost = `${window.location.protocol}//${window.location.host}`; // http://localhost:4400\n    this._controllerProp('$baseURIhost', baseURIhost);\n\n    return this;\n  }\n\n\n  /**\n   * Set the subproperty of the controller's $fridge property in all controllers.\n   * The $fridge object will be preserved during controller processing execution. Other controller's properties will be deleted.\n   * @param {string} name - $fridge property name\n   * @param {any} val - value\n   * @returns {App}\n   */\n  fridge(name, val) {\n    const controllersCount = Object.keys(this.ctrls).length;\n    if (controllersCount === 0) { throw new Error(`The $fridge property \"${name}\" should be defined after the method controllers().`); }\n    for (const ctrlName of Object.keys(this.ctrls)) { this.ctrls[ctrlName]['$fridge'][name] = val; }\n    return this;\n  }\n\n\n  /**\n   * Inject the auth library into the all controllers and use it as this.$auth in the controller.\n   * Useful in apps where authentication guards are required in all routes, for example when building a web panel.\n   * @param {Auth} auth - Auth class instance\n   * @returns {App}\n   */\n  auth(auth) {\n    this._controllerProp('$auth', auth);\n\n    // bindings because of this in Auth:login, logout, getLoggedUserInfo, etc methods,\n    // so the methods can be used in HTML, for example: data-rg-click=\"$auth.logout()\"\n    for (const ctrlName of Object.keys(this.ctrls)) {\n      const $auth = this.ctrls[ctrlName]['$auth'];\n      $auth.login = $auth.login.bind($auth);\n      $auth.logout = $auth.logout.bind($auth);\n      $auth.getLoggedUserInfo = $auth.getLoggedUserInfo.bind($auth);\n      $auth.setLoggedUserInfo = $auth.setLoggedUserInfo.bind($auth);\n      $auth.getJWTtoken = $auth.getJWTtoken.bind($auth);\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Define preflight functions which will be executed on every route, before the controller processing() i.e. before loader().\n   * Never define $model in the preflight function because it will triger render() before loader().\n   * Define it before the routes() method.\n   * @param {Function[]} funcs - array of preflight functions (app, trx) => { ... }\n   * @returns {App}\n   */\n  preflight(...funcs) {\n    this._controllerProp('$preflight', funcs);\n    return this;\n  }\n\n\n  /**\n   * Define postflight functions which will be executed on every route, after the controller processing(), i.e. after the postrend().\n   * Here the $model can be defined (what wil trigger the render()).\n   * Define it before the routes() method.\n   * @param {Function[]} funcs - array of preflight functions (app, trx) => { ... }\n   * @returns {App}\n   */\n  postflight(...funcs) {\n    this._controllerProp('$postflight', funcs);\n    return this;\n  }\n\n\n  /**\n   * Define routes\n   * @param {string[][]} routesCnf\n   * @returns {App}\n   */\n  routes(routesCnf) {\n    const router = new Router(this.$debugOpts.router, this.$debugOpts.regochRouter);\n\n    for (const routeCnf of routesCnf) {\n      if (!routeCnf || (!!routeCnf && !Array.isArray(routeCnf)) || (!!routeCnf && !routeCnf.length)) { throw new Error(`Invalid route definition ${routeCnf}`); }\n\n      const cmd = routeCnf[0]; // 'when', 'notfound', 'do', 'redirect'\n\n      if (cmd === 'when') {\n        const route = routeCnf[1]; // '/page1'\n        const ctrlName = routeCnf[2]; // 'Page1Ctrl'\n        const routeOpts = routeCnf[3]; // {authGuards: ['autoLogin', 'isLogged', 'hasRole']}\n        if (!this.ctrls[ctrlName]) { throw new Error(`Controller \"${ctrlName}\" is not defined or not injected in the App.`); }\n        const ctrl = this.ctrls[ctrlName];\n        router._when(route, ctrl, routeOpts);\n\n      } else if (cmd === 'notfound') {\n        const ctrlName = routeCnf[1]; // 'NotfoundCtrl'\n        if (!this.ctrls[ctrlName]) { throw new Error(`Controller \"${ctrlName}\" is not defined or not injected in the App.`); }\n        const ctrl = this.ctrls[ctrlName];\n        router._notfound(ctrl);\n\n      } else if (cmd === 'do') {\n        const funcs = routeCnf.filter((routeCnfElem, key) => { if (key !== 0) { return routeCnfElem; } });\n        router._do(...funcs);\n\n      } else if (cmd === 'redirect') {\n        const fromRoute = routeCnf[1];\n        const toRoute = routeCnf[2];\n        router._redirect(fromRoute, toRoute);\n      }\n    }\n\n\n    // test URI against routes when browser's Reload button is clicked\n    router._exe();\n\n    // A) test URI against routes when element with data-rg-href attribute is clicked --> 'pushstate'\n    // B) test URI against routes when BACK/FORWARD button is clicked --> 'popstate'\n    navig.onUrlChange(pevent => {\n      router._exe(pevent); // pevent is popstate or pushstate event (see navig.onUrlChange())\n    });\n\n    return this;\n  }\n\n\n  /**\n   * Inject the content of the client/_cache/views.json.\n   * Useful to speed up the HTML view load, especially in data-rg-inc elements.\n   * @param {object} viewsCached - the content of the client/_cache/views.json file\n   * @returns {App}\n   */\n  viewsCached(viewsCached) {\n    // this.controllerProp('viewsCached', viewsCached);\n    window.regochWeber.viewsCached = viewsCached;\n    return this;\n  }\n\n\n  /**\n   * Define the debugging options. Set the controller's $debugOpts property.\n   * @param {object} $debugOpts\n   * @returns {App}\n   */\n  debugger($debugOpts) {\n    if (!!$debugOpts) { this.$debugOpts = $debugOpts; }\n    this._controllerProp('$debugOpts', this.$debugOpts);\n    return this;\n  }\n\n\n\n  /********** EVENTS **********/\n  /**\n   * Fired when HTML doc with the all resources is loaded.\n   * https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload\n   * @param {Function} cb - callback, () => { ... }\n   */\n  onReady(cb) {\n    window.onload = cb;\n  }\n\n\n  /**\n   * Fired when HTML doc is loaded without CSS, IMG and other resources.\n   * https://developer.mozilla.org/en-US/docs/Web/API/Window/DOMContentLoaded_event\n   * @param {Function} cb - callback, event => { ... }\n   */\n  onDOMLoaded(cb) {\n    document.addEventListener('DOMContentLoaded', cb);\n  }\n\n\n  /**\n   * Listen for the DOM changes. Creates app.DOMObserver.\n   * How to use:\n   * app.createDOMObserver((mutationsList, observer) => { ... });\n   * const targetNode = document.querySelector('p#my-id); const config = { attributes: true, childList: true, subtree: true };\n   * app.DOMObserver.observe(targetNode, config);\n   * To stop observing use: app.DOMObserver.disconnect();\n   * https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n   * @param {Function} cb - callback, (mutationsList, observer) => { ... }\n   */\n  createDOMObserver(cb) {\n    this.DOMObserver = new MutationObserver(cb);\n  }\n\n\n}\n\n\nexport default App;\n","import View from './View.js';\n\n\nclass Model extends View {\n\n  constructor() {\n    super();\n    this.$model = {};\n    this.$modeler = {};\n  }\n\n\n  /**\n   * Proxy the this.$model object.\n   */\n  proxifyModel() {\n    const trapHandler = {\n      set: (obj, prop, value) => {\n        // console.log('obj-before::', { ...obj });\n        // console.log('prop::', prop);\n        // console.log('value::', value);\n        const tf = Reflect.set(obj, prop, value);\n        // console.log('obj-after::', obj);\n        this.render('$model.' + prop);\n        return tf;\n      }\n    };\n\n    this.$model = new Proxy(this.$model, trapHandler);\n  }\n\n\n\n  /**\n   * Define modeler (helper) methods, for example: this.$modeler.use('pets').mpush('dog');\n   * @returns [any[]]\n   */\n  modeler() {\n    /**\n     * @param {string} moelName - the model name, for example in $model.company.name --> modelName is company\n     */\n    this.$modeler.use = (modelName) => {\n      const methods = {\n        /**\n         * Set the model value\n         * @param {any} val - the model value at certain path\n         * @param {string} path - the $model property path, for example 'product.name'\n         */\n        setValue: (val, path) => {\n          const mprop = !!path ? `${modelName}.${path}` : modelName;\n          this._setModelValue(mprop, val); // see Aux class\n        },\n\n        getValue: (path) => {\n          const mprop = !!path ? `${modelName}.${path}` : modelName;\n          const val = this._getModelValue(mprop); // see Aux class\n          return val;\n        },\n\n        mpush: (arrElem) => {\n          this.$model[modelName].push(arrElem);\n          this.render('$model.' + modelName);\n        },\n\n        mpop: () => {\n          this.$model[modelName].pop();\n          this.render('$model.' + modelName);\n        },\n\n        munshift: (arrElem) => {\n          this.$model[modelName].unshift(arrElem);\n          this.render('$model.' + modelName);\n        },\n\n        mshift: () => {\n          this.$model[modelName].shift();\n          this.render('$model.' + modelName);\n        },\n\n        mrender: () => {\n          this.render('$model.' + modelName);\n        },\n\n      };\n\n      return methods;\n    };\n\n  }\n\n\n\n  /**\n   * Delete all $model properties\n   */\n  emptyModel() {\n    this.$model = {};\n  }\n\n\n\n  /**\n   * Check if the this.$model is empty object\n   * @returns {boolean}\n   */\n  isModelEmpty() {\n    return !Object.keys(this.$model).length;\n  }\n\n\n\n\n}\n\n\nexport default Model;\n","import Model from './Model.js';\nimport navig from '../lib/navig.js';\n\n\nclass Controller extends Model {\n\n  // controller properties: $auth, $debugOpts, $fridge, $model, $modeler, $preflight, $postflight, $rg, $httpClient, $baseURIhost\n  constructor() {\n    super();\n    this.$debugOpts = {}; // debug options, setup with App.debugger()\n    this.$fridge = {}; // fridged properties will not be deleted during controller processing i.e. in the navig.resetPreviousController()\n    this.$navig = navig;\n  }\n\n\n\n  /************* LIFECYCLE HOOK METHODS ***********/\n  /**\n   * LOAD HTML\n   * Load the page views, includes, lazy loads, etc... Use \"View\" methods here.\n   * @param {object} trx - regoch router transitional variable\n   * @returns {Promise<void>}\n   */\n  async loader(trx) { }\n\n  /**\n   * LOAD DATA\n   * Init the controller properties (set initial values).\n   * @param {object} trx - regoch router transitional variable\n   * @returns {Promise<void>}\n   */\n  async init(trx) { }\n\n  /**\n   * REND HTML AND DATA\n   * Render data-rg- elements.\n   * @param {object} trx - regoch router transitional variable\n   * @returns {Promise<void>}\n   */\n  async rend(trx) { await this.render(); }\n\n  /**\n   * Execute after rend.\n   * @param {object} trx - regoch router transitional variable\n   * @returns {Promise<void>}\n   */\n  async postrend(trx) { }\n\n  /**\n   * Destroy the controller when the data-rg-href element is clicked (see parse.href()).\n   * - removes all data-rg-... element lsiteners\n   * @param {Event} pevent - popstate or pushstate event which caused URL change\n   * @returns {Promise<void>}\n   */\n  async destroy(trx) { }\n\n\n\n\n\n  /**\n   * Main router middleware.\n   * 1) destroy() - execute the destroy() of the previous controller\n   * 3) rgKILL() - kill the previous controller event listeners\n   * 2)  $model = {} - reset the pevious and current $model\n   * @param {object} navig - navigation stages {uri:string, ctrl:Controller}\n   * @param {object} trx - regoch router transitional variable (defined in router.js -> _exe())\n   * @returns {Promise<void>}\n   */\n  async processing(trx) {\n    // navig processes\n    navig.setPrevious(); // set previous uri and ctrl\n    await navig.resetPreviousController(trx); // reset previous controller and execute destroy()\n    navig.setCurrent(this); // set the current uri and ctrl\n    if (this._debug().navig) { console.log(`%c---navig---`, 'color:green; background:#D9FC9B;', navig); }\n\n    // model processes\n    this.emptyModel(); // set $model to empty object\n    this.proxifyModel(); // set $model as proxy object\n    this.modeler(); // define this.$modeler methods\n\n    // controller processes\n    try { await this.loader(trx); } catch (err) { console.error(err); }\n    await this.rgInc(true);\n    this.rgSetinitial(); // parse data-rg-setinitial\n    try { await this.init(trx); } catch (err) { console.error(err); }\n    try { await this.rend(trx); } catch (err) { console.error(err); }\n    try { await this.postrend(trx); } catch (err) { console.error(err); }\n\n    // post-view processes\n    await this.rgLazyjs();\n  }\n\n\n\n\n  /************ RENDER METHODS ***********/\n  /**\n   * Render the view i.e. the data-rg- elements with the attrValQuery.\n   * For example: data-rg-print=\"first_name\", where first_name is the controllerProp.\n   * @param {string|RegExp} attrValQuery - query for the attribute value\n   * @param {number} renderDelay - delay in miliseconds\n   */\n  async render(attrValQuery, renderDelay = 5) {\n    if (!!attrValQuery) {\n      /* - remove dynamic part of the attrValquery because dynamic part in the data-rg- elem is not same as solved attrValQuery\n       - for example data-rg-print=\"$model.advert___{{ad_num}}\" is resolved to $model.advert___3 */\n      attrValQuery = attrValQuery.replace(/___.+$/, ''); // $model.advert___3 -> $model.advert\n    }\n\n    this._debug('render', `--------- render (start) -- attrValQuery: ${attrValQuery} -- renderDelay: ${renderDelay} -- ctrl: ${this.constructor.name} ------`, 'green', '#D9FC9B');\n\n    // Render DataRg generators.\n    this.rgFor(attrValQuery);\n    this.rgRepeat(attrValQuery);\n    this.rgPrint(attrValQuery);\n\n    await new Promise(r => setTimeout(r, renderDelay));\n\n    // Render DataRg non-generators.\n    this.rgIf(attrValQuery);\n    this.rgSpinner(attrValQuery);\n    this.rgSwitch(attrValQuery);\n    this.rgDisabled(attrValQuery);\n    this.rgValue(attrValQuery);\n    this.rgChecked(attrValQuery);\n    this.rgClass(attrValQuery);\n    this.rgStyle(attrValQuery);\n    this.rgSrc(attrValQuery);\n    this.rgAttr(attrValQuery);\n    this.rgElem(attrValQuery);\n    this.rgEcho();\n\n    await new Promise(r => setTimeout(r, renderDelay));\n\n    // Render DataRgListeners. First remove all listeners with the rgKILL() and after that associate listeners to data - rg - elements.\n    await this.rgKILL();\n    this.rgHref();\n    this.rgClick();\n    this.rgKeyup();\n    this.rgChange();\n    this.rgEvt();\n    this.rgSet();\n    this.rgModel();\n\n\n    this._debug('render', `--------- render (end) -- attrValQuery: ${attrValQuery} ------`, 'green', '#D9FC9B');\n  }\n\n\n\n  /**\n   * Use render() method multiple times.\n   * @param {string[]|RegExp[]} attrValQuerys - array of the controller property names: ['company.name', /^company\\.year/]\n   * @param {number} renderDelay - delay in miliseconds\n   */\n  async renders(attrValQuerys = [], renderDelay = 5) {\n    for (const attrValQuery of attrValQuerys) { await this.render(attrValQuery, renderDelay); }\n  }\n\n\n\n}\n\nexport default Controller;\n","/**\ninterface CookieOpts {\n  domain?: string;\n  path?: string;\n  expires?: number | Date; // number of hours or exact date\n  secure?: boolean;\n  httpOnly?: boolean;\n  sameSite?: string; // 'strict' for GET and POST, 'lax' only for POST\n}\n */\n\nclass Cookie {\n\n  /**\n   * @param {CookieOpts} cookieOpts - cookie options\n   * @param {boolean} debug - show debug info\n   */\n  constructor(cookieOpts, debug) {\n    this.cookieOpts = cookieOpts;\n    this.debug = debug;\n  }\n\n\n  /**\n   * Set cookie. Cookie value is string.\n   * @param {string} name - cookie name\n   * @param {string} value - cookie value (string)\n   * @returns {void}\n   */\n  put(name, value) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // encoding cookie value\n    const valueStr = encodeURIComponent(value); // a b --> a%20b\n\n    // name=value;\n    let cookieStr = `${name}=${valueStr};`;\n\n    // add cookie options: domain, path, expires, secure, HttpOnly, SameSite\n    cookieStr = this._appendCookieOptions(cookieStr);\n    document.cookie = cookieStr;\n\n    if (this.debug) { console.log('cookie-put():cookieStr: ', cookieStr); }\n  }\n\n\n\n  /**\n   * Set cookie. Cookie value is object.\n   * @param {string} name - cookie name\n   * @param {object} valueObj - cookie value (object)\n   * @returns {void}\n   */\n  putObject(name, valueObj) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // convert object to string and encode that string\n    const valueStr = encodeURIComponent(JSON.stringify(valueObj)); // a b --> a%20b\n\n    // name=value;\n    let cookieStr = `${name}=${valueStr};`;\n\n    // add cookie options: domain, path, expires, secure, HttpOnly, SameSite\n    cookieStr = this._appendCookieOptions(cookieStr);\n    document.cookie = cookieStr;\n\n    if (this.debug) { console.log('cookie-putObject(): ', cookieStr); }\n  }\n\n\n\n  /**\n   * Get all cookies in string format (cook1=jedan1; cook2=dva2;).\n   * @returns {string} - example: cook1=jedan1; cook2=dva2;\n   */\n  getAll() {\n    if (!document) { throw new Error('The document is not available.'); }\n    const allCookies = document.cookie; // 'cook1=jedan1; cook2=dva2;'\n    if (this.debug) { console.log('cookie-getAll(): ', allCookies); }\n    return allCookies;\n  }\n\n\n\n  /**\n   * Get a cookie by specific name. Returned value is string.\n   * @param {string} name - cookie name\n   * @returns {string}\n   */\n  get(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr, cookieVal;\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      if (elemArr[0] === name) {\n        cookieVal = elemArr[1];\n      }\n    });\n\n    cookieVal = decodeURIComponent(cookieVal); // a%20b --> a b\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-get()-cookiesArr: ', cookiesArr);\n      console.log('cookie-get()-cookieVal: ', name, '=', cookieVal);\n    }\n\n    return cookieVal;\n  }\n\n\n\n  /**\n   * Get cookie by specific name. Returned value is object.\n   * @param {string} name - cookie name\n   * @returns {object}\n   */\n  getObject(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookieVal = this.get(name); // %7B%22jen%22%3A1%2C%22dva%22%3A%22dvica%22%7D\n\n    // convert cookie string value to object\n    let cookieObj = null;\n    try {\n      if (cookieVal !== 'undefined' && !!cookieVal) {\n        const cookieJson = decodeURIComponent(cookieVal);\n        cookieObj = JSON.parse(cookieJson);\n      }\n    } catch (err) {\n      console.error('cookie-getObject(): ', err);\n    }\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-getObject():cookieVal: ', cookieVal);\n      console.log('cookie-getObject():cookieObj: ', cookieObj);\n    }\n\n    return cookieObj;\n  }\n\n\n\n  /**\n   * Remove cookie by specific name.\n   * @param {string} name - cookie name\n   * @returns {void}\n   */\n  remove(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n    let dateOld = new Date('1970-01-01T01:00:00'); // set expires backward to delete cookie\n    dateOld = dateOld.toUTCString(); // Thu, 01 Jan 1970 00:00:00 GMT\n    document.cookie = `${name}=;expires=${dateOld};path=/;`;\n    if (this.debug) { console.log('cookie-remove(): ', name, ' cookie is deleted.'); }\n  }\n\n\n\n  /**\n   * Remove all cookies.\n   * @returns {void}\n   */\n  removeAll() {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    // set expires backward to delete cookie\n    let dateOld = new Date('1970-01-01T01:00:00'); // set expires backward to delete cookie\n    dateOld = dateOld.toUTCString(); // Thu, 01 Jan 1970 00:00:00 GMT\n\n    // get cookies array\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr;\n    const cookiesArr2 = [];\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      document.cookie = `${elemArr[0]}=;expires=${dateOld};path=/;`;\n      cookiesArr2.push(document.cookie);\n    });\n\n    // debug\n    if (this.debug) {\n      console.log('cookie-removeAll():before:: ', cookiesArr);\n      console.log('cookie-removeAll():after:: ', cookiesArr2);\n    }\n  }\n\n\n\n\n  /**\n   * Check if cookie exists.\n   * @param {string} name - cookie name\n   * @return boolean\n   */\n  exists(name) {\n    if (!document) { throw new Error('The document is not available.'); }\n\n    const cookiesArr = this._toCookiesArr(); // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n\n    // extract cookie value for specific name\n    let elemArr, cookieExists = false;\n    cookiesArr.forEach(elem => {\n      elemArr = elem.split('='); // [\"authAPIInit1\", \"jedan1\"]\n      if (elemArr[0] === name) {\n        cookieExists = true;\n      }\n    });\n\n    if (this.debug) { console.log('cookie-exists(): ', cookieExists); }\n\n    return cookieExists;\n  }\n\n\n\n  /******* PRIVATES *******/\n  /**\n   * Add cookie options (domain, path, expires, secure, ...) to the cookie string.\n   * @param {string} cookieStr - cookie string\n   * @returns {string}\n   */\n  _appendCookieOptions(cookieStr) {\n\n    if (!this.cookieOpts) {\n      return cookieStr;\n    }\n\n    // domain=example.com;\n    if (!!this.cookieOpts.domain) {\n      const cDomain = `domain=${this.cookieOpts.domain};`;\n      cookieStr += cDomain;\n    }\n\n    // path=/;\n    if (!!this.cookieOpts.path) {\n      const cPath = `path=${this.cookieOpts.path};`;\n      cookieStr += cPath;\n    }\n\n    // expires=Fri, 3 Aug 2001 20:47:11 UTC;\n    if (!!this.cookieOpts.expires) {\n      let expires;\n      if (typeof this.cookieOpts.expires === 'number') {\n        const d = new Date();\n        d.setTime(d.getTime() + (this.cookieOpts.expires * 60 * 60 * 1000));\n        expires = d.toUTCString();\n      } else {\n        expires = this.cookieOpts.expires.toUTCString();\n      }\n      const cExpires = `expires=${expires};`;\n\n      cookieStr += cExpires;\n    }\n\n    // secure;\n    if (!!this.cookieOpts.secure) {\n      const cSecure = 'secure;';\n      cookieStr += cSecure;\n    }\n\n    // HttpOnly;\n    if (!!this.cookieOpts.httpOnly) {\n      const cHttpOnly = 'HttpOnly;';\n      cookieStr += cHttpOnly;\n    }\n\n    // SameSite=lax; or SameSite=strict;\n    if (!!this.cookieOpts.sameSite) {\n      const cSameSite = `SameSite=${this.cookieOpts.sameSite};`;\n      cookieStr += cSameSite;\n    }\n\n    return cookieStr;\n  }\n\n\n\n  /**\n   * Get all cookies from document.cookie and convert it in the array format.\n   * authAPIInit1=jedan1; authAPIInit2=dva2; authAPI=  --> [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n   * @returns {string[]}\n   */\n  _toCookiesArr() {\n    // fetch all cookies\n    const allCookies = document.cookie; // authAPIInit1=jedan1; authAPIInit2=dva2; authAPI=\n\n    // create cookie array\n    const cookiesArr = allCookies.split(';'); // [\"authAPIInit1=jedan1\", \" authAPIInit2=dva2\", \" authAPI=\"]\n\n    // remove empty spaces from left and right side\n    const cookiesArrMapped = cookiesArr.map(cookiesPair => { // cookiesPair: \" authAPIInit2=dva2\"\n      return cookiesPair.trim();\n    });\n\n    return cookiesArrMapped; // [\"authAPIInit1=jedan1\", \"authAPIInit2=dva2\", \"authAPI=\"]\n  }\n\n\n\n}\n\n\nexport default Cookie;\n","import navig from './navig.js';\nimport Cookie from './Cookie.js';\nimport HTTPClient from './HTTPClient.js';\n\n\n\n/**\n * Authentication with the JWT token and cookie.\n */\nclass Auth {\n\n  /**\n   * authOpts:\n   {\n    apiLogin :string,       // API login URL: http://127.0.0.1:8001/users/login\n    afterGoodLogin :string, // redirect after succesful login: '/{loggedUserRole}', (empty string => dont do anything, location.href => reload same URL)\n    afterBadLogin :string,  // redirect after unsuccesful login: '/login', (empty string => dont do anything, location.href => reload same URL)\n    afterLogout :string     // URL after logout: '/login', (empty string => dont do anything, location.href => reload same URL)\n   }\n   * NOTICE: If afterGoodLogin, afterBadLogin, afterLogout has falsy value then the URL will stay same i.e. location.href.\n   * @param {object} authOpts - auth options\n   */\n  constructor(authOpts) {\n    this.authOpts = authOpts;\n\n    const cookieOpts = {\n      // domain: 'localhost',\n      path: '/',\n      expires: 5, // number of hours or exact date\n      secure: false,\n      httpOnly: false,\n      sameSite: 'strict' // 'strict' for GET and POST, 'lax' only for POST\n    };\n    this.cookie = new Cookie(cookieOpts);\n\n    const opts = {\n      encodeURI: false,\n      timeout: 8000,\n      retry: 3,\n      retryDelay: 5500,\n      maxRedirects: 3,\n      headers: {\n        'authorization': '',\n        'accept': '*/*', // 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'\n        'content-type': 'text/html; charset=UTF-8'\n      },\n      responseType: '' // 'blob' for file download (https://developer.mozillfullnamea.org/en-US/docs/Web/API/XMLHttpRequest/responseType)\n    };\n    this.httpClient = new HTTPClient(opts);\n\n    this.jwtToken; // JWT Token string: 'JWT ...'\n    this.loggedUser = this.getLoggedUserInfo(); // the user object: {first_name, last_name, username, ...}\n  }\n\n\n\n\n  /******* CONTROLLER METHODS - use in the controller's constructor as app.auth() ******/\n  /**\n   * Send login request to the API.\n   * @param {object} creds - credentials object send as body to the API, for example: {username, password}\n   * @returns {Promise<any>}\n   */\n  async login(creds) {\n    const url = this.authOpts.apiLogin;\n    const answer = await this.httpClient.askJSON(url, 'POST', creds);\n\n    if (answer.status === 200) {\n      const apiResp = answer.res.content;\n\n      this.jwtToken = apiResp.jwtToken;\n      this.loggedUser = apiResp.loggedUser;\n\n      this.cookie.put('auth_jwtToken', apiResp.jwtToken); // set cookie 'auth_jwtToken': 'JWT xyz...'\n      this.cookie.putObject('auth_loggedUser', apiResp.loggedUser); // set cookie 'auth_loggedUser' and class property 'this.loggedUser': {first_name: , last_name: , ...}\n\n      // redirect to URL\n      const afterGoodLoginURL = this._correctURL(this.authOpts.afterGoodLogin, apiResp.loggedUser);\n      if (!!afterGoodLoginURL) { navig.goto(afterGoodLoginURL); }\n\n      return apiResp;\n\n    } else {\n      this.loggedUser = null;\n      this.cookie.removeAll();\n      const errMSg = !!answer.res.content && (answer.res.content.message || answer.res.content.msg) ? answer.res.content.message || answer.res.content.msg : 'Bad Login';\n      throw new Error(errMSg);\n    }\n\n  }\n\n\n  /**\n   * Logout. Remove login cookie, loggedUser and change the URL.\n   * @param {number} ms - time period to redirect to afterLogoutURL\n   * @returns {void}\n   */\n  async logout(ms) {\n    this.cookie.removeAll(); // delete all cookies\n    this.loggedUser = undefined; // remove class property\n    await new Promise(r => setTimeout(r, ms));\n    const afterLogoutURL = this._correctURL(this.authOpts.afterLogout, null);\n    if (!!afterLogoutURL) { navig.goto(afterLogoutURL); } // change URL\n  }\n\n\n  /**\n   * Get logged user info from the object property (faster) or from the cookie 'auth_loggedUser' (slower)\n   * @returns {object} - {first_name, last_name, ...}\n   */\n  getLoggedUserInfo() {\n    const loggedUser = this.loggedUser || this.cookie.getObject('auth_loggedUser');\n    return loggedUser;\n  }\n\n\n  /**\n   * Set logged user object.\n   * @param {object} user_obj - {first_name, last_name, ...}\n   * @returns {void}\n   */\n  setLoggedUserInfo(user_obj) {\n    this.loggedUser = user_obj;\n    this.cookie.putObject('auth_loggedUser', user_obj);\n  }\n\n\n  /**\n   * Get JWT token from cookie\n   * @return {string} - JWT eyJhbGciOiJIUzI1NiIsInR...\n   */\n  getJWTtoken() {\n    const jwtToken = this.jwtToken || this.cookie.get('auth_jwtToken');\n    return jwtToken;\n  }\n\n\n\n\n\n  /******* ROUTER METHODS (use in the router as authGuards) ******/\n  /**\n   * Check if user is logged and if yes do auto login e.g. redirect to afterGoodLogin URL.\n   * @returns {boolean}\n   */\n  autoLogin() {\n    const loggedUser = this.getLoggedUserInfo(); // get loggedUser info after successful username:password login\n\n    // redirect to URL\n    if (!!loggedUser && !!loggedUser.username) {\n      const afterGoodLoginURL = this._correctURL(this.authOpts.afterGoodLogin, loggedUser);\n      if (!!afterGoodLoginURL) { navig.goto(afterGoodLoginURL); }\n      console.log(`%c AuthWarn:: Autologin to ${afterGoodLoginURL} is triggered.`, `color:Maroon; background:LightYellow`);\n    }\n  }\n\n\n  /**\n   * Check if user is logged and if not redirect to afterBadLogin URL.\n   * @returns {boolean}\n   */\n  isLogged() {\n    const loggedUser = this.getLoggedUserInfo(); // get loggedUser info after successful username:password login\n    const isAlreadyLogged = !!loggedUser && !!loggedUser.username;\n\n    // redirect to afterBadLogin URL\n    if (!isAlreadyLogged) {\n      const afterBadLoginURL = this._correctURL(this.authOpts.afterBadLogin, loggedUser);\n      if (!!afterBadLoginURL) { navig.goto(afterBadLoginURL); }\n      throw new Error('AuthWarn:: This route is blocked because the user is not logged in.');\n    }\n  }\n\n\n  /**\n   * Check if user has required role: admin, customer... which corresponds to the URL.\n   * For example role \"admin\" must have URL starts with /admin/...\n   * If not redirect to /login page.\n   * @returns {boolean}\n   */\n  hasRole() {\n    const loggedUser = this.getLoggedUserInfo(); // get loggedUser info after successful username:password login\n\n    // get current URL and check if user's role (admin, customer) is contained in it\n    const currentUrl = window.location.pathname + window.location.search; // browser address bar URL: /admin/product/23\n\n    let urlHasRole = false;\n    if (!!loggedUser && !!loggedUser.role) {\n      urlHasRole = currentUrl.indexOf(loggedUser.role) !== -1;\n    }\n\n    if (!urlHasRole) {\n      const afterBadLoginURL = this._correctURL(this.authOpts.afterBadLogin, loggedUser);\n      if (!!afterBadLoginURL) { navig.goto(afterBadLoginURL); }\n      throw new Error('AuthWarn:: This route is blocked because the user doesn\\'t have valid role.');\n    }\n  }\n\n\n\n\n  /**** PRIVATES ****/\n  /**\n   * Correct afterGoodLogin, afterBadLogin, afterLogout.\n   * @param {string} url - original url: afterGoodLogin, afterBadLogin, afterLogout\n   * @param {object} loggedUser - {first_name, last_name, ... role}\n   * @returns\n   */\n  _correctURL(url, loggedUser) {\n    let url_corrected;\n    if (!!loggedUser && !!loggedUser.role) {\n      url_corrected = !!url ? url.replace('{loggedUserRole}', loggedUser.role) : '';\n    } else {\n      url_corrected = !!url ? url : '';\n    }\n    return url_corrected;\n  }\n\n\n\n}\n\n\n\nexport default Auth;\n","/**\n * HTML Form Library\n * According to W3C Standard https://html.spec.whatwg.org/multipage/forms.html\n */\nclass Form {\n\n  constructor(formName) {\n    this.formName = formName;\n    this.debugOptions = {\n      setControl: false,\n      setControls: false,\n      getControl: false,\n      getControls: false,\n      delControl: false,\n      delControls: false\n    };\n  }\n\n\n  /**\n   * Set the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   * @param {any|string[]} val - the value\n   * @returns {void}\n   */\n  setControl(key, val) {\n    this._debug('setControl', `--------- setControl(\"${key}\", \"${val}\") ------`, 'green', '#A1F8DC');\n    const elems = document.querySelectorAll(`[data-rg-form=\"${this.formName}\"] [name=\"${key}\"]`);\n    if (!elems.length) { console.log(`%c FormWarn:: Form \"${this.formName}\" doesn't have control with name=\"${key}\" attribute.`, `color:Maroon; background:LightYellow`); return; }\n\n    for (const elem of elems) {\n      if (elem.type === 'text') { // INPUT[type=\"text\"]\n        if (typeof val === 'object') { val = JSON.stringify(val); }\n        elem.value = val;\n        elem.setAttribute('value', val);\n\n      } else if (elem.type === 'number') { // INPUT[type=\"number\"]\n        if (val === '') { val = 0; }\n        else if (typeof val === 'string') { val = +val; }\n        elem.value = val;\n        elem.setAttribute('value', val);\n\n      } else if (elem.type === 'checkbox') { // CHECKBOX\n        elem.checked = false;\n        if (typeof val !== 'boolean' && val.indexOf(elem.value) !== -1) { elem.checked = true; }\n        else if (typeof val === 'boolean') { elem.checked = val; }\n\n      } else if (elem.type === 'radio') { // RADIO\n        elem.checked = false;\n        if (val === elem.value) { elem.checked = true; }\n\n      } else if (elem.type === 'select-multiple') { // on SELECT with multiple, for example <select name=\"family\" size=\"4\" multiple>\n        const options = elem; // all options\n        for (const option of options) {\n          option.selected = false;\n          if (val.indexOf(option.value) !== -1) { option.selected = true; }  // val is array\n        }\n\n      } else if (elem.type === 'textarea') { // TEXTAREA\n        if (typeof val === 'object') { val = JSON.stringify(val, null, 2); }\n        elem.value = val;\n\n      } else { // ALL OTHER: select-one\n        elem.value = val;\n      }\n      this._debug('setControl', `${elem.type}[name=\"${key}\"] got value=\"${val}\"`, 'green');\n    }\n\n  }\n\n\n\n  /**\n   * Set the multiple form controls with one object.\n   * @param {object} obj - the object which represent the object values, for example: {name:'John Doe', age:23, employed:true}\n   * @returns {void}\n   */\n  setControls(obj) {\n    this._debug('setControls', '--------- setControls ------', 'green', '#88DBC0');\n    if (!obj) { return; }\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      const elems = document.querySelectorAll(`[data-rg-form=\"${this.formName}\"] [name^=\"${key}\"]`);\n      this._debug('setControls', `\\nElems found: ${elems.length} in the form for name^=\"${key}\".`, 'green');\n      if (!elems.length) {\n        this._debug('setControls', `FormWarn::setControls -> Form \"${this.formName}\" doesn't have control with name^=\"${key}\" attribute.`, 'green');\n        continue;\n      }\n\n      for (const elem of elems) {\n        let val, attrVal;\n        if (!!elem) {\n          attrVal = elem.getAttribute('name'); // seller.name\n          const keys = attrVal.split('.'); // ['seller', 'name']\n          const key1 = keys[0]; // seller\n          const key2 = keys[1]; // name\n          if (key1 && !key2) { val = obj[key1]; }\n          else if (key1 && key2) { val = obj[key1][key2]; }\n        }\n\n        if (!!attrVal) { this.setControl(attrVal, val); }\n\n        if (this._debug().setControls) { console.log(`setControls:: obj-key:: ${key} , attrVal:: ${attrVal} , elem::`, elem); }\n      }\n\n    }\n  }\n\n\n\n  /**\n   * Get the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   * @param {boolean} convertType - default true\n   * @returns {string|number}\n   */\n  getControl(key, convertType = true) {\n    this._debug('getControl', '--------- getControl ------', 'green', '#A1F8DC');\n    const elems = document.querySelectorAll(`[data-rg-form=\"${this.formName}\"] [name=\"${key}\"]`);\n    if (!elems.length) { console.error(`Form \"${this.formName}\" doesn't have name=\"${key}\" control.`); }\n\n    let val;\n    const valArr = [];\n    let i = 1;\n    for (const elem of elems) {\n      if (elem.type === 'checkbox') {\n        let v = elem.value;\n        if (convertType) { v = this._typeConvertor(elem.value); }\n        if (elem.checked) { valArr.push(v); val = valArr; }\n        if (i === elems.length && !val) { val = []; }\n\n      } else if (elem.type === 'select-multiple') {\n        const opts = elem.selectedOptions; // selected options\n        for (const opt of opts) {\n          let v = opt.value;\n          if (convertType) { v = this._typeConvertor(opt.value); }\n          valArr.push(v);\n          val = valArr;\n        }\n        if (i === elems.length && !val) { val = []; }\n\n      } else if (elem.type === 'radio') {\n        let v = elem.value;\n        if (convertType) { v = this._typeConvertor(elem.value); }\n        if (elem.checked) { val = v; }\n\n      } else if (elem.type === 'number') {\n        val = elem.valueAsNumber;\n\n      } else if (elem.type === 'password') {\n        val = elem.value;\n\n      } else if (elem.type === 'file' && elem.multiple) {\n        val = elem.files;\n\n      } else if (elem.type === 'file') {\n        val = elem.files[0];\n\n      } else {\n        let v = elem.value;\n        if (convertType) { v = this._typeConvertor(elem.value); }\n        val = v;\n      }\n      i++;\n    }\n\n    this._debug('getControl', `${val}`, 'green');\n    return val;\n  }\n\n\n  /**\n   * Get the form controll values and return corresponding object\n   * @param {string[]} keys - the value of the \"name\" HTML attribute\n   * @param {boolean} convertType - default true\n   * @returns {object}\n   */\n  getControls(keys, convertType = true) {\n    if (!keys) { console.error('getControlsErr: Argument \"keys\" is not defined. It should be an array.'); }\n    this._debug('getControls', '--------- getControls ------', 'green', '#A1F8DC');\n    this._debug('getControls', keys, 'green');\n    const obj = {};\n    for (const key of keys) {\n      obj[key] = this.getControl(key, convertType);\n    }\n    return obj;\n  }\n\n\n  /**\n   * Empty the form control value.\n   * @param {string} key - the value of the \"name\" HTML attribute\n   * @returns {void}\n   */\n  delControl(key) {\n    this._debug('delControl', '--------- delControl ------', 'green', '#A1F8DC');\n    this._debug('delControl', key, 'green');\n    const elems = document.querySelectorAll(`[data-rg-form=\"${this.formName}\"] [name^=\"${key}\"]`);\n    if (!elems.length) { console.error(`Form \"${this.formName}\" doesn't have name^=\"${key}\" control.`); }\n\n    for (const elem of elems) {\n      if (elem.type === 'checkbox') {\n        elem.checked = false;\n      } else if (elem.type === 'select-multiple') {\n        const options = elem; // all options\n        for (const option of options) {\n          option.selected = false;\n        }\n      } else if (elem.type === 'radio') {\n        elem.checked = false;\n      } else {\n        elem.value = '';\n      }\n    }\n\n  }\n\n\n  /**\n   * Empty the form control values.\n   * @param {string[]} keys - the value of the \"name\" HTML attribute\n   * @returns {void}\n   */\n  delControls(keys) {\n    if (!keys) { console.error('delControlsErr: Argument \"keys\" is not defined. It should be an array.'); }\n    this._debug('delControls', '--------- delControls ------', 'green', '#A1F8DC');\n    this._debug('delControls', keys, 'green');\n    for (const key of keys) {\n      this.delControl(key);\n    }\n  }\n\n\n  /**\n   * Convert string into integer, float or boolean.\n   * @param {string} value\n   * @returns {string | number | boolean | object}\n   */\n  _typeConvertor(value) {\n    function isJSON(str) {\n      try { JSON.parse(str); }\n      catch (err) { return false; }\n      return true;\n    }\n\n    if (!!value && !isNaN(value) && !/\\./.test(value)) { // convert string into integer (12)\n      value = parseInt(value, 10);\n    } else if (!!value && !isNaN(value) && /\\./.test(value)) { // convert string into float (12.35)\n      value = parseFloat(value);\n    } else if (value === 'true' || value === 'false') { // convert string into boolean (true)\n      value = JSON.parse(value);\n    } else if (isJSON(value)) {\n      value = JSON.parse(value);\n    }\n\n    return value;\n  }\n\n\n  _debug(tip, text, color, background) {\n    if (this.debugOptions[tip]) { console.log(`%c ${text}`, `color: ${color}; background: ${background}`); }\n    return this.debugOptions;\n  }\n\n\n\n}\n\nexport default Form;\n","class Paginator {\n\n  /**\n   * @param {number} linksSize - the number of links which will be shown\n   * @param {string[]} currentPageClasses - the CSS classes which marks the active page, usually it's <li class=\"active\">\n   */\n  constructor(linksSize, currentPageClasses) {\n    this.linksSize = +linksSize || 5;\n    this.currentPageClasses = currentPageClasses || ['active'];\n  }\n\n\n  /**\n   * Calculate the page links and make current page active.\n   * @param {number} currentPage - current page\n   * @param {number} itemsTotal - the total number of items\n   * @param {number} itemsPerPage - number of items on one page\n   * @returns {{ pageLinks:{i:number, c:string[]}[], pagesTotal:number }}\n   */\n  async page(currentPage, itemsTotal, itemsPerPage) {\n    currentPage = +currentPage; // convert to number\n    const pagesTotal = Math.ceil(itemsTotal / itemsPerPage); // define total number of pages\n\n    // define pagination numbers that will be shown from start to end\n    const half = Math.ceil(this.linksSize / 2);\n    let istart;\n    let iend;\n    if (pagesTotal >= this.linksSize) {\n      if (currentPage >= 1 && currentPage < this.linksSize) {\n        istart = 1;\n        iend = this.linksSize;\n      } else if (currentPage >= this.linksSize && currentPage <= pagesTotal - half) {\n        istart = currentPage - half;\n        iend = currentPage + half;\n      } else {\n        istart = pagesTotal - this.linksSize + 1;\n        iend = pagesTotal;\n      }\n    } else {\n      istart = 1;\n      iend = pagesTotal;\n    }\n\n    // define pagelinks objects\n    let i; // link number\n    const pageLinks = [];\n    for (i = istart; i <= iend; i++) {\n      const c = i === currentPage ? this.currentPageClasses : []; // current (active) page CSS classes\n      const obj = { i, c };\n      pageLinks.push(obj);\n    }\n\n    return { pageLinks, pagesTotal };\n  }\n\n\n  /**\n   * Calculate the skip number, i.e. how many items to skip.\n   * @param {number} currentPage - current page number\n   * @param {number} itemsPerPage - total items per one page\n   * @returns {number}\n   */\n  skipCalc(currentPage, itemsPerPage) {\n    const skip = (currentPage - 1) * itemsPerPage;\n    return skip;\n  }\n\n\n  /**\n   * Calculate the table ordinal number #.\n   * @param {number} currentPage - current page number\n   * @param {number} itemsPerPage - total items per one page\n   * @param {number} i - table row number: 0, 1, 2, ...\n   * @returns {number}\n   */\n  ordCalc(currentPage, itemsPerPage, i) {\n    const ord = (currentPage - 1) * itemsPerPage + i + 1;\n    return ord;\n  }\n\n\n\n\n}\n\nexport default Paginator;\n","class Util {\n\n  /**\n   * Time delay\n   * @param {number} ms - miliseconds\n   * @returns {Promise<void>}\n   */\n  sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n\n}\n\n\nconst util = new Util();\n\nexport default util;\n","import App from './App.js';\nimport Controller from './mvc/Controller.js';\nimport * as syslib from './lib/index.js';\n\nexport { App, Controller, syslib };\nwindow.regochWeber.sys = { App, Controller, syslib };\n"],"sourceRoot":""}